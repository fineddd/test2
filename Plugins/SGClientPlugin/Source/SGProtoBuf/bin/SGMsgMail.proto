syntax = "proto2";

package SGMsg;

import "SGMsgBase.proto";
import "SGMsgMapData.proto";
import "SGMsgAlliance.proto";
import "SGMsgCity.proto";
import "SGMsgChat.proto";
import "SGMsgOther.proto";

//---------------------------邮件相关begin------------------------------

// 邮件状态
enum MailState
{
   UnRead 		= 1;// 未读
   Readed 		= 2;// 已读
   GotAttachs 	= 3;// 已领取邮件
}

enum EMailType
{
	EM_BATTLE   = 1;//战斗(PVP)
    EM_PVE      = 2;//打怪、采集等非玩家战斗
    EM_ALLIANCE = 3;//联盟
    EM_SYSTEM   = 4;//系统
	EM_PERSON   = 10;//个人(未使用)
    EM_SENT = 11;//已发送(未使用)
}

// 邮件
message MailSimpleInfo
{
	optional GUID mail_id = 1;
	optional int32 status = 2;		// 邮件状态
	optional bool collect = 3;		// 是否收藏
	optional int64 send_time = 4;	// 发送时间
	optional int64 config_id = 5;	// 配置id
	optional int64 expire_time = 6;	// 过期时间
	optional int32 opt_type = 7;	// 操作结果
}

// 个人基础信息
message PersonBasic
{
	optional string Title = 1;// （个人邮件）标题
    
    optional string Content = 2;// （个人邮件）内容
	
	optional MailPlayerBasic Basic = 3;// 玩家基础信息
	
	repeated MailPlayerBasic RecvBasic = 4;// 已发送的收件人信息
	
	optional string SubTitle = 5;// （系统邮件）副标题
	
	optional bool bHotFixMail = 6;//  热更新邮件
	
	optional int32 LoardLevel = 7;// 主堡等级 （暂时） 

	optional string update_version = 8;// 更新版本号
}


message BattleResultInfo
{
	repeated PlayerSoldierGroup PlayerGroup = 1; // 玩家基础信息，战斗结构的时候，有多个。其他时候都一个。
	optional int64 ConfigID = 2;// 怪物配置ID	
	optional int32 ObjectType = 4;// 类型
	optional GUID object_id = 5; // 对象ID
	optional int64 TotalLoad = 6;// 总负重
	optional GUID CityID = 12;// 主目标的城市ID 	
	optional int64 GroupID = 13;// 组ID
	optional GUID create_monster_city	=	14;
	optional int64 total_contribute	=	15;
	optional int64 Incident_type = 17;// 事件源
	optional bool is_attack = 18;  //是否进攻方
}

message BattleSoldierGroupInfo
{
	optional PlayerSoldierGroup PlayerGroup = 1; // 玩家基础信息，战斗结构的时候，有多个。其他时候都一个。
	
	optional int64 ConfigID = 2;// 怪物配置ID	
		
	repeated GeneralProperty  propertys = 3;// 属性信息 	
	
	optional int32 ObjectType = 4;// 类型 可能没有对象，没有对象的时候 是0，是SoldierGroup

	optional GUID object_id = 14; // 对象ID所在的
	optional bool is_attack = 5;  //是否进攻方

	optional GUID SoldierGroupID = 6;//部队的ID
	optional int64 LosePower = 7;//掉的战斗力
	optional int64 StartSoldierCount = 8;  //开始兵的数量
	optional int64 DeadSoldierCount = 9;  //死亡的数量
	optional int64 SeriouslyInjuredCount = 10;  //重伤的数量
	optional int64 MinorInjuriesCount = 11;  //轻伤的数量
	optional int64 nEndSoldierCount = 12;  //剩余的数量
	optional bool is_SoldierSummary = 13;  //多个部队汇总信息
	optional int64 TotalLoad = 15;//总负重
	optional int64 robotid = 16;//机器人的ID 竞技产战报，机器人ID。
	optional int64 nTotalKill = 17;//伤害
	
	optional PlayerApcInfo PlayerApcInfo 	 	 = 19;	//玩家改装车信息
	repeated PlayerTechInfo PlayerTechList 	 	 = 20;	// 科技树
	optional int32 index						 = 23;	//行军队列编号
}

//为兼容老版本，此处BattleMail即为战报，虽与邮件分离，但不改名字，可能有多场战斗了
message BattleMail
{
	optional int32 BattleResult = 1; // 战斗结果 1 win 2 平 3 负
	
	optional BattleSoldierGroupInfo selfSoldierGroup = 2; // 双方信息---组合的时候，汇总的，玩家只显示第一个
	
	optional BattleSoldierGroupInfo targetSoldierGroup = 3; // 双方信息---组合的时候，汇总的，玩家只显示第一个
	
	optional int32 BattleType = 4; // pve = 1,pvp =2,自爆车 = 3
    
    optional GUID report_id = 5; // 战报id
    
    optional int64 expired_time = 6;// 过期时间,单位秒 

    repeated BattleLog battleLogList = 7; // 战斗记录列表 超过1场就是组合的
	optional Point2D pos			 = 8;
	optional int32 area_id			 = 9;
}

message MailReceiver
{
	optional int32 AreaID = 1;// 小区ID 	
	optional int64 ScenceID = 2;// 场景ID	
	optional GUID PlayerID = 3;// 玩家ID	
	optional GUID CityID = 4;// 城市ID	
	optional int64 GameServerID = 5;// gameserverid	
}


//为兼容老版本，此处BattleMail即为战报，虽与邮件分离，但不改名字，可能有多场战斗了
message BattleResultData
{
	optional int32 BattleResult = 1; // 战斗结果 1 win 2 平 3 负
	
	optional BattleResultInfo AttackGroup = 2; // 双方信息---
	
	optional BattleResultInfo DefenceGroup = 3; // 双方信息---
	
	optional int32 BattleType = 4; // pve = 1,pvp =2,自爆车 = 3
}

message BattleTurnActiondata
{
	optional int32 eType = 1; // 动作类型EBattleDamageType 1 伤害类型  
	optional GUID ActionObjID = 2; // 动作类型EBattleDamageType  动作的 sgbase id，根据需求可以调整，比如战斗单位id 
	optional int64 ActionValue = 3; // 
	optional int64 SkillID = 4; // 
	optional int64 nHeroID = 5; // 
	optional bool bCritical = 6; // 
}

message BattleObjectTurnSimple
{
	optional GUID ActionObjID = 1; // 动作类型EBattleDamageType  动作的 sgbase id，根据需求可以调整，比如战斗单位id 
	optional int64 nTurnStartSoldierCount = 2; // 回合开始时士兵数量
	optional int64 nTurnTakeDamage = 3; // 损失士兵数量
}

message BattleTurnData
{
	optional int32 TurnRoud = 1;// 回合数
	repeated BattleTurnActiondata turndatalog_list = 2;//本回合的动作，谁打了谁，造成了多少伤害。  BDT_Normal = 1,  //普攻
	repeated BattleObjectTurnSimple objectturnsimple_list = 3;//本回合双方对象情况
}

//单场战斗纪录
message BattleLog
{
    optional GUID log_id = 1; // 战报id

	optional Point2D  Pos = 2;// 坐标	
	optional int32 AreaID = 3;// 小区ID 	

	optional BattleSoldierGroupInfo selfGroup = 4; // 
	
	optional BattleSoldierGroupInfo targetGroup = 5; // 
	
	optional int32 BattleResult = 6; // 战斗结果 1 win 2 平 3 负

	optional int32 BattleType = 7; // pve = 1,pvp =2,自爆车 = 3

	repeated BattleTurnData  turndata_list = 8;//每个回合的数据
}

//科技信息
message PlayerTechInfo
{
	optional int32 TechType 		= 1;	//科技类型
	optional int32 TechValue 		= 2;	//科技加成
	optional int32 TechPercentValue = 3;	//科技百分比
	optional int64 Power 		 	= 4;	//战力
}

message BattleBrief
{
    optional PlayerSoldierBrief PlayerGroup = 1; // 玩家基础信息 

    optional int64 ConfigID = 2;// 怪物配置ID	
	optional bool is_attack = 4;  //是否进攻方
    optional int32 ObjectType = 5;// 类型

	optional GUID SoldierGroupID = 6;//部队的ID
	optional int64 LosePower = 7;//掉的战斗力
	optional int64 StartSoldierCount = 8;  //开始兵的数量
	optional int64 DeadSoldierCount = 9;  //死亡的数量
	optional int64 SeriouslyInjuredCount = 10;  //重伤的数量
	optional int64 MinorInjuriesCount = 11;  //轻伤的数量
	optional int64 nEndSoldierCount = 12;  //剩余的数量
	optional bool is_SoldierSummary = 13;  //多个部队汇总信息
	optional int64 TotalLoad = 14;//总负重
	optional int64 robotid = 15;//机器人的ID 竞技产战报，机器人ID。
	optional int64 nTotalKill = 16;//伤害
	
	optional PlayerApcInfo PlayerApcInfo 	 = 17;	//玩家改装车信息
	repeated PlayerTechInfo PlayerTechList 	 = 18;	// 科技树
	repeated MOHero PlayerHeroList			 = 19;	//玩家英雄列表
	repeated GeneralProperty  propertys 	 = 20;	// 属性信息 	
	optional int32 index						 = 21;	//行军队列编号
}

message BattleLogBrief
{
	optional GUID log_id = 1; // 战报id

	optional int32 BattleResult = 2; // 战斗结果 1 win 2 平 3 负
	optional BattleBrief SelfGroup = 4; // 玩家基础信息 
	optional BattleBrief TargetGroup = 5; // 玩家基础信息 
}

message BattleMailBrief
{
    optional int32 BattleResult = 1; // 战斗结果 1 win 2 平 3 负
	
	optional BattleBrief SelfGroup = 2; // 双方信息
	
	optional BattleBrief TargetGroup = 3; // 双方信息
	
	optional int32 BattleType = 4; // pve = 1,pvp =2,自爆车 = 3
    
    optional GUID report_id = 5; // 战报id

    repeated BattleLogBrief BattleLog_list = 6; // 战报id
	optional Point2D pos			 = 7;
	optional int32 area_id			 = 8;
}

enum EMailOperateType  //邮件操作
{
	NONE 	= 0;  //无
	REFUSE 	= 1;  //拒绝
	ACCEPT 	= 2;  //接受
}

message AllianceMail
{
	optional string AllianceName = 1;
	optional string AllianceTag = 2;
	optional ScheduleInfo Schedule = 3;// 联盟日程
	optional int64 OfficerID = 4;// 官员ID
	optional int64 OldPosition = 5;// 旧阶级
	optional int64 NewPosition = 6;// 新阶级
	optional AllianceMember MemberInfo = 7;//成员信息
	repeated AllianceMember MemberList = 8;// 非活跃成员列表/每日捐献
	optional int64 TeachID =9;// 科技ID
	optional AllianceMark.MarkRecord Mark = 10;// 联盟标记
	optional string LeaderName = 11;// 盟主名字
	optional GUID AllianceID = 12; // 联盟ID
	optional int32 operate_type = 13;     //通用操作状态  EMailOperateType
	optional int64 language        				= 14; 	//语言
	optional int32 max_members                  = 15;   //最大人数
	optional int64 power 						= 16;   //战力
	optional int64 cur_members                  = 17;   //当前人数
	optional AllianceSymbol symbol              = 18;   //联盟旗帜 
	optional int64 expired_time 				= 19;// 过期时间,单位毫秒
	optional int64 TransferID 					= 20;// 联盟转让ID (0开始, 转让成功+1)
	optional GUID leader_id						= 21;// 联盟盟主ID
    optional int64 level                        = 22;// 联盟等级
	optional int32 rank							= 23;// 联盟玩家某数据排名	
}

message PhysicalMail
{
	optional int64 nMonsterID = 1;		// 配置ID
	optional int64 nReturnValue = 2;	// 返还体力值
	optional MailPlayerBasic Basic = 3;	// 玩家信息
	optional Point2D Pos = 4;// 坐标
	optional MailPlayerBasic TargetBasic = 5;	// 对方的玩家信息
	optional int32 nObjectType = 6;// 对方的类型
}

message WoundedMail
{
	repeated MOSoldier soldiers					 = 1;// 士兵数	
}

message NpcTownOccRankInfo
{
	optional GUID alliance_id = 1;		// 帮会ID
	optional int64 total_occ_time = 2;  //总共占领时长ms
	optional string alliance_name = 3;  //帮会名字
	optional string alliance_tag = 4;  //帮会简称
}
message TerritoryMail
{
	optional AllianceBasicInfo Allianc = 1;
	optional Point2D Pos = 2;		// 坐标
	repeated ItemInfo Cost = 3;		// 消耗
	optional AllianceMember Leader = 4;// 建筑者
	optional AllianceMember Target = 5;// 攻击者
	optional int64 ConfigID = 6;
	optional int64 area_id = 7;// 小区ID
}

message NpcTownOccMail
{
	optional int64 town_config_id = 1;// 城镇配置ID
	optional string alliance_name = 2;  //帮会名字
	optional string alliance_tag = 3;  //帮会简称
	repeated NpcTownOccRankInfo rank_list = 4;// 占领时长排行榜
	optional int64 score = 5;  //分数
	optional int64 stage = 6;  //档位

	// 国王信息
	optional MailPlayerBasic Basic = 7;	// 玩家信息
	optional int64 TownSkill = 8;// 城镇技能
	optional int64 TownReward = 9;// 城镇奖励
}

message NpcTownMeritMail
{
	optional int64 town_config_id = 1;// 城镇配置ID
	optional string alliance_name = 2;  //帮会名字
	optional string alliance_tag = 3;  //帮会简称
	repeated NpcTownMeritRankInfo rank_list = 4;// 城镇战功排行榜 (前10)
	optional int64 merit = 5;  //个人战功
	optional int64 stage = 6;  //档位
	optional GUID player_id = 7; // 本人玩家ID
	
	optional int64 cur_count = 8;// 当前占有数量
	optional int64 limit_count = 9;// 总占有数量
}

message RankInfoMail
{
	optional int64 rank_id = 1;  //排行榜ID
	optional int32 rank = 2;  //名次
    optional int64 score = 3;  //积分
}

message ActivityInfoMail
{
	optional int64 end_time = 1;  //活动结束时间
	optional int64 activity_id = 2;  //活动id
	optional int64 battle_pass_id = 3;  //通行证id
}

message ShowInfoMail  //展示邮件
{
	repeated ItemInfo item_list = 1;   //物品列表
	optional int64 charge_bag_id = 2;  //充值礼包ID
}

message OperateParam
{
	optional string Title = 1;// （个人邮件）标题
    
    optional string Content = 2;// （个人邮件）内容
	
	optional string SubTitle = 3;// （系统邮件）副标题

	optional int64 Language = 4;// 语言ID 
	optional string LanguageCode = 5;// 语言编码	
}

//邮件信息
message MailInfo
{  
    optional int64 TemplateId = 1; // 邮件模板id
  
    optional GUID InstanceId = 2; // 实例id
 
    optional int32 Status = 3;  // 邮件状态
   
    optional int64 SendTime = 4;// 发送时间
	
    optional int32 MailType = 5; // 邮件类型
		    
    repeated ItemInfo Attachments = 6;// 附件
    
    optional int64 ExpiredTime = 7;// 过期时间,单位秒
	
	optional bool bCollection = 8;// 是否收藏
	
	optional GUID PlayerID = 9; // 所属玩家ID(Server使用)
	
	optional bool bNoNeedSend2Client = 10;// 是否需要同步给客户端（在线全服邮件直接广播了不需要下发）   
	
	optional int32 TargertType = 11;// 目标类型
		
	optional PersonBasic PersonParam = 12;// 对方玩家基础信息（包括个人邮件）
	
	optional ScoutInfo ScoutParam = 13; // 侦查信息
	
	optional GatherMail GatherParam = 14;// 采集信息
	
	optional BattleMail BattleParam = 15;// 战斗信息
	
	optional AllianceMail AllianceParam = 16;// 联盟信息
	
	optional PhysicalMail PhysicalParam = 17;// 体力返还
	
	optional WoundedMail WoundedParam = 18;// 医院死兵邮件
	
	optional int64 nMapId = 19;// 地图ID

	optional NpcTownOccMail NpcTownOccParam = 20;// 城镇占领信息
	
	optional TerritoryMail TerritoryParam = 21;// 领土邮件

	optional RankInfoMail rank_param = 22; //排行榜邮件

	optional ActivityInfoMail activity_param = 23;// 活动邮件

	repeated OperateParam operate_param = 24;// 运营邮件内容
	
	optional ForceMoveCityParam move_city_param = 25;// 服务器强制迁城参数
	
	optional int64 activity_id					 = 26; //通用活动邮件
	optional AllianceBossParam alliance_boss_param		 = 27;

	optional ShowInfoMail show_info_param = 28;  //展示类型邮件

	repeated GUID player_list	= 29;// 包含的玩家(战报使用)
	optional int32 btr_rank			 = 30;	//大逃杀排名
	optional int64 btr_item_count		= 31;

	optional int64 area_id		= 32;//邮件产生的服ID
	
	optional int64 common_int_param			 = 33;	//通用int 参数
    
    optional BattleMailBrief battle_brief    = 34;   //战斗邮件简要信息

	optional NpcTownMeritMail npc_town_merit_param = 35; //城镇战功邮件
    
    optional AllianceDuleWeekLog alliance_dule_param = 36; //联盟对决邮件
    
    optional AllianceNotice alliance_notice_param = 37; //联盟公告邮件
}

message ForceMoveCityParam
{
	optional Point2D before_city_pos			 = 1;	//迁城之前city坐标
}
message AllianceBossParam
{
	optional int64 boss_id						 = 1;	//monster 表 id
	optional int64 damage   					 = 2;	//对boss造成伤害
	optional int64 bonus_damage					 = 3;	//联盟奖励要求的伤害
	optional int64 appoint_time 				 = 4;	//预约时间
	optional string official_name				 = 5;	//预约官员名字
	optional string mvp_name					 = 6;	//mvp玩家名字
	optional int64 reward_time					 = 7;	//奖励倍数
	optional string alliance_name			     = 8;	//联盟简称
	optional int32 reward_plus			     	 = 9;	//联盟奖励倍数
	repeated AllianceBossRankData rank_data				= 10;	//排行榜
	optional int32 success			     	 = 11;	//是否成功
}

// 邮件列表
// MSG_S2C_NTF_GET_NEW_MAIL                    = 14426; //获得新邮件
// MSG_S2C_RSP_MAIL_LIST                       = 14425; //确认邮件列表
message MailInfoData
{
	repeated MailInfo MailList = 1;	
}

// 全服邮件
message GlobalMail
{
	optional int64 nTime	= 1;
	optional MailInfo Mail = 2;
}

// 全服邮件 列表
message GlobalMailData
{
	required int32 area_id = 1;
	repeated GlobalMail GlobalMails	= 2;
}

// MSG_C2S_REQ_DELETE_MAIL                     = 14428; // 请求删除邮件
message C2SReqDeleteMail
{	
	required GUID mail_id = 1; // 邮件id
	optional int32 mail_type = 2;// 邮件类型
    optional bool old_battle_mail = 3; //是否旧的战斗邮件 
}

// MSG_S2C_RSP_DELETE_MAIL                     = 14429;
message S2CRspDeleteMail
{

	required bool success = 1;
    required GUID mail_id = 2; // 删除的邮件ID
}

// MSG_C2S_REQ_ONE_KEY_DELETE                  = 14430;
message C2SReqOneKeyDeleteMail
{

	required int32 mail_type = 1;	// 邮件类型
	repeated GUID deleted_list = 2;// 批量删除邮件（目前给采集用）
}

// MSG_S2C_RSP_ONE_KEY_DELETE                  = 14431;
message S2CRspOneKeyDeleteMail
{

    repeated GUID deleted_list = 1; // 删除的邮件列表
	required int32 mail_type = 2;	// 邮件类型
}

// MSG_S2C_NTF_DELETE_MAIL                     = 14427; // 通知客户端删除了邮件
message S2CNTFDeleteMails
{
    repeated GUID deleted_list = 1; // 删除的邮件列表
}

// MSG_C2S_REQ_OPEN_MAIL                       = 14422;
message C2SReqOpenMail
{
	repeated GUID mail_ids = 1; // 邮件ID
	optional int32 mail_type = 2;	// 邮件类型
    optional bool old_battle_mail = 3; //是否旧的战斗邮件 
}

// MSG_S2C_RSP_OPEN_MAIL                       = 14423;
message S2CRspOpenMail
{
    required bool success = 1; // 是否成功打开

	repeated GUID mail_ids = 2; // 邮件内容
}

// MSG_C2S_REQ_GET_MAIL_ATTACH                 = 14432; // 获取附件
message C2SReqGetMailAttach
{
	optional GUID mail_id = 1; //邮件id，如果不提供邮件ID，则表示一键领取
	optional int32 mail_type = 2;// 邮件类型	
}

// MSG_S2C_RSP_GET_MAIL_ATTACH                 = 14433; //
message S2CRspGetMailAttach
{
	optional GUID required_mail_id = 1; // 客户端请求的邮件id   
	optional int32 mail_type = 2;	// 邮件类型
	
    // 以下是服务器回复的有用的内容
    repeated GUID deleted = 4; // 删除的邮件列表
    repeated GUID get_attach_mail_id = 5; // 领取了附件的邮件列表
	repeated GUID readed_mail_id = 6; // 阅读过的邮件列表
}

// MSG_MAIL2GS_GET_MAIL_ATTACH                 = 14436; // 发给Game领取附件
message Mail2GSGetMailAttach
{
    repeated MailInfo mail = 1; // 邮件详情
    required S2CRspGetMailAttach rsp_to_client = 2; // 回复给客户端的内容
	optional int32 result = 3;	
	repeated GUID get_attach = 4; // 领取的邮件ID
	optional GUID playerID = 5;// 玩家ID
	optional string client_version = 6;// 客户端版本号
}

// MSG_GS2MAIL_GET_MAIL_ATTACH_RESULT          = 14437; // Game通知Mail，附件领取结果
message GS2MailGetMailAttachResult
{
    repeated GUID get_attach = 2; // 领取的邮件ID
    repeated GUID not_get_attach = 3; // 未领取的邮件ID
}

// MSG_S2S_REQ_ADD_NEW_MAIL                    = 14420; //添加新邮件
message S2SReqAddNewMail
{
    required MailInfo mail = 1; // 邮件信息
	repeated GUID player_list = 2;// 玩家列表
	optional int64 game_server_id	 = 3;	//玩家所在game serverid
}

// MSG_S2S_REQ_ADD_NEW_MAIL_CONFIGID           = 14451; //添加新邮件 (ConfigID)
message S2SReqAddNewMailConfigID
{
	optional int64 ConfigID = 1; // 邮件配置ID
	optional S2SReqAddNewMail mail_info = 2; // 邮件信息
}

// MSG_S2S_REQ_BETCH_ADD_NEW_MAIL                    = 14420; //批量添加新邮件
message S2SReqBetchAddNewMail
{
    repeated MailInfo mails = 1; // 邮件信息
}

message SendInfo
{
	required GUID xRecvPlayID = 1;
	optional int32 areaID = 2;
}

//MSG_C2S_REQ_SEND_MAIL						= 14438; // 个人邮件
message C2SReqSendMail
{
	repeated SendInfo infos = 1;	
	
	required MailInfo mail = 2;
}

//MSG_C2S_REQ_SEND_MAIL						= 14438; // 个人邮件
message GS2PSReqSendMail
{
	repeated SendInfo infos = 1;	
	required MailInfo mail = 2;
}

// MSG_S2C_RSP_SEND_MAIL						= 14439; // 个人邮件回包
message S2CRspSendMail
{
	optional bool bSucess = 1;
}

// MSG_PS2PS_RPC_SEND_MAIL						= 14439; // RPC个人邮件
message S2SReqSendMail
{
	repeated GUID xRecvPlayID = 1;	
	optional GUID xSendPlayID = 2;
	optional int32 result = 3;
	required MailInfo mail = 4; // 邮件信息	
}

// MSG_C2S_REQ_MAIL_COLLECT						= 14440; // 邮件 收藏
message C2SReqMailCollect
{
	required GUID mail_id = 1;	//

	required bool bCollect = 3;
	
	optional int32 mail_type = 4;	// 邮件类型
    
    optional bool old_battle_mail = 5; //是否旧的战斗邮件 
}

// MSG_S2C_RSP_MAIL_COLLECT						= 14441; // 邮件收藏回包
message S2CRspMailCollect
{
	required GUID mail_id = 1;	//
	optional bool bSucess = 2;
	required bool bCollect = 3;
}


// MSG_S2S_ADD_NEW_GLOBAL_MAIL                    = 14443; //添加新全服邮件
message S2SAddNewGlobalMail
{
    required GlobalMail global_mail = 1; // 邮件信息
}

// MSG_S2S_ADD_NEW_GLOBAL_MAIL_CONFIGID           = 14452; //添加新全服邮件 (ConfigID)
message S2SAddNewGlobalMailConfigID
{
	optional int64 ConfigID = 1; // 邮件配置ID
	optional S2SAddNewGlobalMail mail_info = 2; // 邮件信息
}

// MSG_S2RB_RSP_GET_RANDOM_PLAYER_ID			= 14445;	//获取随机玩家ID，用于Robot测试发送邮件，目前仅RobotClient使用
message S2RBGetRandomPlayerID
{
	required GUID playerID = 1;				// 玩家ID
}

message ResultInfo
{
	optional GUID city_id 				= 2;
	optional int64 maxLoad 				= 5;// 负重
	optional int64 kill_count 			= 9;// 击杀士兵数
	optional int64 dead_count			= 10;// 阵亡士兵数
	
}

message BattleObjectInfo
{
	optional int32 object_type 			= 1;
	repeated ResultInfo result_info		= 2;
	optional GUID object_id 			= 3;
	optional int64 config_id 			= 4;

}

message MailReceiverList
{
    repeated MailReceiver receiverlist = 1;
}

// 战斗结果通知game 	MSG_SS2GS_BATTLE_RESULT = 2604;	// 战斗结果通知game
// 战斗结果通知到mail   MSG_S2S_NTF_SAVE_BATTLE_REPORT = 14458; //暂时有mail服务器负责db保存, 后续可能会优化
message SS2GSBattleResult
{
	optional BattleResultData battle_result = 1;
    optional bool bsave_flag = 2;
    optional BattleMail attackattle_mail = 3;
    optional MailReceiverList attackattle_mail_receiverlist = 4;

    optional BattleMail defencebattle_mail = 5;
    optional MailReceiverList defencebattle_mail_receiverlist = 6;

	optional int64 attackattle_mail_id = 7;
	optional int64 defencebattle_mail_id = 8;
}

//MSG_C2S_REQ_OPERATE_MAIL      = 14447;  //请求邮件操作
message C2SReqOperateMail
{
	optional GUID mail_id = 1;	//邮件ID
	optional int32 operate_type = 2;  //操作类型  //enum EMailOperateType  //邮件操作
	optional AllianceMember member = 3;  //玩家信息(服务器用)
	optional int64 mould_type = 4;  //邮件模板类型(服务器用)
	optional MailInfo mail_info = 5; // 邮件信息(服务器用)
}

//MSG_S2C_RSP_OPERATE_JOIN_ALLIANCE_MAIL      = 14448;  //入盟邮件操作返回
// message S2CRspOperateJoinAllianceMail
// {
// 	optional GUID mail_id = 1;	//邮件ID
// 	optional int32 operate_type = 2;  //操作类型  //enum EMailOperateType  //邮件操作
// }

// MSG_C2S_REQ_SEND_ALLIANCE_MAIL              = 14463; // 发送联盟邮件
message C2SReqSendAllianceMail
{
	optional MailInfo mail_info = 1;
}

//MSG_S2AS_REQ_SEND_ALLIANCE_MAIL					 = 14451;	// 发送全帮邮件
message S2ASReqSendAllianceMail
{
	optional GUID alliance_id = 1;	//帮会ID
	optional int64 mail_config_id = 2; //邮件配置ID
	optional MailInfo mail_info = 3;
	optional int64 join_time_limit = 4; //入帮时间限制, <=时间戳ms
	repeated int32 positions = 5; //只给某些职位的人发邮件, 填空为全发
}

// MSG_SS2ASSENDTERRITORTMAIL = 14449;// 
message SS2ASSendTerritortMail
{
	optional TerritoryMail xMail = 1;
	optional int32 nType = 2;// 
	optional int32 nGarrison = 3;
}


// MSG_C2S_REQ_GET_MAIL_LIST                    = 14455; //批量添加新邮件
message C2SReqGetMailList
{
	optional int64 max_send_time = 1;
}

// MSG_S2C_ACK_GET_MAIL_LIST                    = 14456; //批量添加新邮件
message S2CAckGetNewMail
{
	optional int64 max_send_time = 1;

	repeated MailSimpleInfo mail_simples = 2;// 老邮件的状态效验

	repeated MailInfo mails = 3;// 新增的邮件
}

// MSG_C2S_REQ_GET_ERROR_MAIL                    = 14457; //批量添加新邮件
message C2SReqGetERRORMail
{
	repeated GUID mail_ids 			= 1;
	repeated GUID report_mail_ids 	= 2;
}

//---------------------------邮件相关end------------------------------
//暂无
//MSG_C2S_REQ_MAIL_LIST                       = 14424;
message C2SReqMailList
{

	optional int64 reg_time = 2; // 角色创建时间戳，客户端不需要填写
    optional int32 born_area_id = 3; // 角色创角服务器，客户端不需要填写
}

// 邮件
message S2CRspMailList
{

	repeated MailInfo mail_list  = 2; // 邮件列表
    optional bool success = 3; // 是否成功
}


// //	MSG_BGIP2MAIL_REQ_MAIL_LIST                          = 14334;
// message BGIP2MailReqBGIPMailList
// {
// 	required GUID player_id = 1; // 玩家ID
// 	optional int32 page_no  = 2; // 页号
// }

// //	MSG_MAIL2BGIP_RSP_MAIL_LIST                          = 14335;
// message Mail2BGIPRspMailList
// {
// 	repeated MailInfo mail_list = 1;
// }


// MSG_C2S_REQ_MAIL_BLOCK						= 14440; // 邮件屏蔽 举报等
message C2SReqMailBlock
{
	required int32 optType = 1;	// 操作类型 1 ：屏蔽 2：解除屏蔽 3 ：举报
	required GUID xBlockID = 2;
}

// MSG_S2C_RSP_MAIL_BLOCK						= 14441; // 邮件屏蔽回包
message S2CRspMailBlock
{
	required int32 optType = 1;	// 操作类型 1 ：屏蔽 2：解除屏蔽 3 ：举报
	required GUID xBlockID = 2;
	optional bool bSucess = 3;
}

//MSG_C2S_REQ_BATTLE_REPORT
message C2SReqBattleReport
{
    optional GUID report_id = 1;    //战报id
    optional GUID player_id = 2;    //玩家id, 服务器使用
}

//MSG_S2C_ACK_BATTLE_REPORT
message S2CAckBattleReport
{
    optional BattleMail battle_report = 1;
}

//MSG_GS2GS_NTF_ASSEMBLE_MAIL
message GS2GSNtfAssembleMail
{
    optional GUID leader_id = 1;
    optional GUID report_id = 2;
    optional int32 gameserverid = 3;
    repeated PlayerSoldierBrief PlayerGroup = 4; // 玩家基础信息 
}
	
//MSG_C2S_REQ_SINGLE_BATTLE_LOG_DETAIL 	= 14463;// 请求单场战报详情
message C2SReqSingleBattleLogDetail
{
	optional GUID report_id = 1;			//战报id
	optional GUID log_id    = 2;			//场次id
	optional GUID player_id = 3;			//玩家id(后端用，前端不用填充数据)
}

//MSG_S2C_RSP_SINGLE_BATTLE_LOG_DETAIL 	= 14464;// 响应单场战报详情
message S2CRspSingleBattleLogDetail
{
	optional BattleLog battle_log = 1; // 战报内容
}

//MSG_C2S_REQ_BATTLE_LOG_DETAIL 				   = 14465;// 请求战斗日志详情
message C2SReqBattleLogDetail
{
	optional GUID report_id = 1;    //战报id
    optional GUID log_id = 2;    	//场次id
	optional GUID player_id = 3;	//玩家id(后端用，前端不用填充数据)
}

//MSG_S2C_RSP_BATTLE_LOG_DETAIL 				   = 14466;// 响应战斗日志详情
message S2CRspBattleLogDetail
{
	optional GUID log_id = 1; // 场次id

	repeated BattleTurnData  turndata_list = 2;//每个回合的数据
}

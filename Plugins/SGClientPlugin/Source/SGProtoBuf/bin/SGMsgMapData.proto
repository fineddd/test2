syntax = "proto2";

package SGMsg;

import "SGMsgBase.proto";
import "SGMsgCity.proto";
import "SGMsgRank.proto";
import "proxy_model.proto";

enum ObjectType
{
	ObjType_NONE						 = 0;	//服务器使用
	ObjType_PLAYER						 = 1;	//服务器使用
	ObjType_CITY						 = 2;	//城市
	ObjType_SOLDIER_GROUP				 = 3;	//部队
	ObjType_MONSTER						 = 4;	//野怪
	ObjType_RESOURCES					 = 5;	//资源点
	ObjType_TACTICAL_BUILDING			 = 6;	//战术建筑
	ObjType_GameCityStruct			 	 = 7;	//gamecity 离线存在，不放在大地图的数据
	ObjType_ASSEMBLE_GROUP				 = 8;	//集结队伍
	ObjType_ModifiedCar				 	 = 9;	//炸弹车队伍
	ObjType_Scout						 = 10; 	//侦查兵
	ObjType_Alliance                     = 11;  //联盟
	ObjType_NpcTown						 = 12; 	//npc 城镇
	ObjType_Cell               		 	 = 13;  //地图格
	ObjType_AllianceBuilding      	     = 14;  //联盟建筑
	ObjType_AllianceRes        			 = 15;  //联盟资源
	ObjType_ExploreActor				 = 16;  //演员类型：运输车队
	ObjType_ExploreSoldier				 = 17;	//探索部队
	ObjType_ExploreMonster				 = 18;	//探索野怪
	ObjType_AllianceBoss				 = 19;	//联盟boss
	ObjType_BRSoldierGroup				 = 20;	//大逃杀玩家部队
	ObjType_BRItem				 		 = 21;	//大逃杀道具类型
	ObjType_BRAirDrop				 	 = 22;	//大逃杀空投类型
	ObjType_ArenaSoldierGroup            = 23;  //竞技场玩家部队
	ObjType_RewardBox          			 = 24;   //大地图宝箱
	ObjType_HeroDispatch		       	 = 25;         //英雄派遣建筑
    ObjType_Escort                       = 26;  //押镖部队
	ObjType_WorldBoss					 = 27;   //世界Boss
    ObjType_MarchingEndStruct			 = 28;  //行军端点
	ObjType_TmpScenceCity				 = 29;  //city 跨服后的占位对象
	ObjType_Radar						 = 30;//雷达

	eObjType_Grid 						 = 31; //地图格子信息
}
//---------------------------demo相关begin------------------------------
//枚举数量有调整，为了不影响客户端现有功能，等级排列暂时不按顺序
enum ServerViewLevel
{
	SVL_TACTICAL_LOD1				 = 1;		//常规大小细节（正常显示大本等级和模型，战斗显示战斗技能，部队显示部队兵种和数量）
	SVL_STRATEGIC_LOD2_3			 = 2;		//食物等资源点位置信息（资源点有采集也显示），野蛮人位置信息（移动也跟着移动），行军路线，村庄
	SVL_NATION_LOD4					 = 3;		//要塞，工会站地，关卡，圣地，标志，本工会的成员大本位置信息。能看到所有主堡
	SVL_TOP_LOD5					 = 4;		//只能看到自己和盟友，世界boss，联盟boss，
}
//枚举数量有调整，为了不影响客户端现有功能，等级排列暂时不按顺序
enum ScenceCloneType
{
	SCT_BIGSCENCEMAP			 = 0;		//普通大地图
	SCT_NEWVILLAGE				 = 1;		//新手村
}
//枚举数量有调整，为了不影响客户端现有功能，等级排列暂时不按顺序
enum EAssembleType
{
	AT_NORMAL			 = 1;	//常规集结
	AT_CRUSADE			 = 2;	//讨伐
}

//组队解散状态原因
enum ETeamFinishType
{
    AFT_None			= 0;
    AFT_BattleWin		= 1;	//胜利
    AFT_BattleOther		= 2;	//其他
    AFT_LeaderCancel	= 3;	//取消
    AFT_TimeOut			= 4;	//超时
    AFT_TargetDisapear	= 5;	//目标消失
    AFT_BattleLose		= 6;	//战斗失败
}
	
//	MSG_C2S_REQ_VIEW_UPDATE						= 2501;		//请求视野变更
message C2SReqViewUpdate
{
	required int32 view_level					 = 1;		//ServerViewLevel
	optional Point2D view_position				 = 2;		//SVL_TACTICAL、SVL_STRATEGIC 等级需要，最高等级是全图信息
	optional int64 scence_id					 = 3;	//场景ID
	optional bool force_update					 = 4;	//强制发送视野信息
	optional int32 area_id						 = 5;		// 小区ID
	optional int32 scence_group_id				 = 6;
	optional int32 view_type					 = 7;		//SGMsgScence.pb ESetViewType
}
//	MSG_S2C_RSP_VIEW_UPDATE						= 2502;		//回复视野变更
message S2CRspViewUpdate
{
	enum ErrorCodeType
	{
		SUCCESS				 = 1;	//成功	
		SYS_ERROR			 = 2;	//服务器数据错误
		VIEW_POS_ERROR		 = 3;	//坐标不存在
		VIEW_LEVLE_ERROR	 = 4;	//view_level 参数错误，不存在的level
	}
	required int32 err_code					 = 1;		//ErrorCodeType
}

message MOSoldier
{
	optional int64 id				= 1;	//soldier 表 id
	optional int64 cur_count		= 2;	//当前数量
	optional int64 init_count		= 3;	//初始数量
	optional int64 injured_count	= 4;	//受伤数量
	optional int64 serious_count	= 5;	//重伤数量
	optional int64 dead_count		= 6;	//死亡数量
	optional int64 kill_count       = 7;    //击杀数量
	optional int64 hero_id       	= 8;    //带队英雄ID
	optional int64 left_count       = 9;    //剩余数量
}

//	MSG_GS2SS_NTF_GARRISON_CITY_HERO_CHANGE							 = 2708;	//game to 场景 城墙英雄变化
//	MSG_NTF_SOLIDER_GROUP_DATA						 = 2607;	//通知客户端队伍信息
message MOSoldierGroup
{
	repeated MOHero heros						 = 1;
	repeated MOSoldier soldiers					 = 2;
	optional GUID sg_id							 = 3;
	optional int64 soldier_count				 = 4;
	optional int32 main_hero_fury 				 = 5;
	optional int64 hero_power					 = 6;
	optional int64 soldier_power				 = 7;
	optional int64 cur_load						 = 8;
	optional int64 total_load					 = 9;
	optional ScenceCarInfo car  				 = 10;
	optional int64 dungeon_power				 = 11;	//副本实力
	optional int32 source_type					 = 12;	//1 自动集结
	optional int64 create_time					 = 13;	//创建时间
    optional EscortCar escort_car              = 14;  //镖车
	optional int64 power						 = 15;	//部队战力
	optional int32 index						 = 16;	//行军队列编号
	optional int64 skin							 = 17;	//皮肤
}
message MOPublicSoldierGroup
{
	optional int64 hero_id						 = 1;
	optional int64 cur_soldier_count			 = 2;
	optional int64 init_soldier_count			 = 3;
	optional int64 skin							 = 4;	//玩家部队皮肤
	optional int32 fury							 = 5;	//当前怒气
	optional GUID sg_id							 = 6;	//
}
message MOMoveInfo
{
	repeated Point2D points					 = 1;
	optional GUID move_target				 = 2;	//移动终点目标，如果是野怪到终点后进行攻击，不同对象不同行为，后续根据策划需求完善
	optional int32 marching_type			 = 4;		//行军类型 EMarchingType
	optional Point2D target_point			 = 6;
	optional int64 target_config			 = 7;
	optional int64 target_type				 = 8;	//ObjectType
	optional string target_player_name		 = 9;
	optional int64 start_time				 = 10;

	optional int32 effect_type				 = 11;// 效果类型0 默认瞬移出生 1 传送
	optional GUID marchingID				 = 12;// 如果远，会创建行军终点对象。这个是终点对象的guid。没创建终点对象，guid为0-0 废弃
}
message MapObjExtension
{
	enum MODataType		//扩展数据类型
	{
		MODT_SOLDIER_GROUP		 = 1;	//部队信息	MOSoldierGroup
		MODT_MOVE_INFO			 = 2;	//移动信息  MOMoveInfo
		MODT_GENERAL_PROPERTY	 = 3;	//属性信息  S2CNtfGeneralProperty
		MODT_HOSPITAL			 = 4;	//医院信息  S2CNtfHospital
		MODT_BARRACKS			 = 5;	//军营信息  S2CNtfBarracks
		MODT_CITY_SG_STATE		 = 6;	//队伍状态  NTFSoldierGroupState
		MODT_IN_CITY_SG_INFO	 = 7;	//城市内士兵信息  NTFInCitySoldiersInfo
		MODT_ALL_DECORATION		 = 8;	//城市内装饰物信息  S2CNtfAllDecoration
		MODT_ENEMY_MARK			 = 9;	//敌对标识信息  NTFEnemyMark
		MODT_SHOP				 = 10;	//商店信息  S2CRspShopList
		MODT_MARCHING_TO_SELF	 = 11;	//向我行军的信息（预警信息）
		MODT_ALL_TASK_DATA		 = 12;	//任务数据信息 S2CNtfAllTaskData
		MODT_ALLIANCE_INFO		 = 13;	//联盟信息 NTFAlianceInfo
		MODT_GLOBAL_BUFF		 = 14;	//全局BUFF NTFGlobalBuffList
		MODT_CAR_PART			 = 15;	//载具养成 S2CNTFCarUpgradeInfo
		MODT_EQUIPWORKSHOP_INFO  = 16; //装备车间信息
		MODT_VIP				 = 17;	//VIP信息
		MODT_MILESTONE			 = 18;	//里程碑信息 MileStoneTaskData msgcity
		MODT_MEMBER_PROPERTY	 = 19;	//成员属性信息 S2CNtfMemberProperty
		MODT_DISPATCH			 = 20;	//派遣信息 S2CRspDispatchNotify
		MODT_PUBLIC_SOLDIER_GROUP			 = 21;	//大地图队伍简要数据 MOPublicSoldierGroup
		MODT_MARCHTOME			 = 22;	//向我行军的信息
	}
	required int32 data_type			 = 1;	//数据类型，根据这个类型对data 进行解析
	required bytes data					 = 2;	//
}
//	MSG_S2C_NTF_MAP_OBJECT_UPDATE					= 2511;		//地图单位数据刷新
message MapObjectInfo
{
	required GUID object_id					 = 1;
	required int32 object_type				 = 2;	//ObjectType
	required Point2D cur_pos				 = 4;	//当前位置坐标，MOT_CITY_BUILDING这个值是 city的坐标，在city内的相对坐标在property中（后面加上场景ID和组ID）
	optional int64 config_id				 = 5;	//MOT_CITY_BUILDING、MOT_MONSTER、MOT_RESOURCES 会有对应的配置ID
	repeated MapObjExtension extension		 = 6;	//预留特殊数据结构类型拓展字段，
	optional ObjectPropertyDB propertys		 = 7;	//处理方式参照 MsgID::MSG_S2C_SYNC_PROPERTY_FULL
	optional ObjectRecordDB records			 = 8;	//处理方式参照 MsgID::MSG_S2C_SYNC_RECORD_FULL
	optional GUID owner						 = 9;
	optional PMsDTO pms_data				 = 10;
	optional PMUpdatesDTO pm_updates_data	 = 11;
}
//	MSG_S2C_NTF_MAP_OBJECT_CREATE					= 2503;		//地图单位（资源点、野怪、队伍等）创建、进入视野通知
message S2CNTFMapObjectCreate
{
	enum CreateType
	{
		CREATE_VIEW_RANGE			 = 0;	//视野创建
		OTHER						 = 1;	//其他类型
		PLAYER_INIT					 = 2;	//玩家数据初始化下发
	}

	enum MsgFlg
	{
		MSGFLG_NONE			 		 	= 0;	//正常未拆分
		MSGFLG_PART						 = 1;	//拆分的包
		MSGFLG_FINISH					 = 2;	//结束的包
	}
	repeated MapObjectInfo object_list						 = 1;
	optional int32 create_type								 = 2;	//创建类型，CreateType
	optional int32 flg_msg							 		 = 3;	//设计
	optional int32 view_level								 = 4;	//设计
	optional Point2D cur_pos				 				 = 5;	//坐标值
}

// MSG_C2S_REQ_OBJECT_LIST_FOR_SEARCH              = 2522;     //请求主城周围object list for search
message C2SReqObjectListForSearch
{
	enum ObjectType
	{
		MONSTER = 4;	//野怪
		RESOURCES = 5;	//资源点
	}
	optional int32 object_type				 = 1;	//搜索类型 	
	optional int32 resource_type			 = 2;	//资源类型
	// ITEM_SUB_TYPE_FOOD = 10001; // 食物资源
	// ITEM_SUB_TYPE_WOOD = 10002; // 净水资源
	// ITEM_SUB_TYPE_IRON = 10003; // 金属资源
	// ITEM_SUB_TYPE_OIL = 10004; // 石油资源	
	optional int32 level					 = 3;	//搜索等级
	optional int32 is_level_adapt			 = 4;   // 是否自适应等级搜索 0:否 1:是
	optional int32 monster_type			 = 5;	//怪物类型
		//MONSTER_TYPE_NONE = 0;
		//MONSTER_TYPE_NORMAL = 1; // 普通野怪
		//MONSTER_TYPE_ASSEMBLE = 2; // 集结怪
		//MONSTER_TYPE_NPC_TOWN_GUARDER = 3; // NPC城镇游荡守卫
		//MONSTER_TYPE_EXPLORE_MONSTER = 4; // 探索怪，实际服务器不使用，服务器不是怪物类型
		//MONSTER_TYPE_DOOMSDAY_MONSTER = 101;		//末日试炼普通怪
		//MONSTER_TYPE_DOOMSDAY_BOSS = 102;		//末日试炼联盟BOSS
		//MONSTER_TYPE_ASSEMBLE_ACTIVITY = 103;		//集结打怪的活动怪
		//MONSTER_TYPE_WP_CALL_MONSTER_ACTIVITY = 104;		//周付费召唤怪活动
		//MONSTER_TYPE_ALLIANCE = 105;		//联盟BOSS 实际服务器不使用，服务器联盟BOSS不是怪物类型
		//MONSTER_TYPE_BR_NORMAL = 106; // 大逃杀普通怪物
		//MONSTER_TYPE_BR_SENIOR = 107; // 大逃杀高级怪物
}


message NTFMoveToMeInfo
{
	optional GUID xEntityID		 	 = 1;//对方的id
	optional GUID xPlayerID		 	 = 2;//对方的PlayerID
	optional GUID xAlianceID		 = 3;//对方的联盟ID
	optional int32 Speed		 	 = 4;//行军速度
	optional MOMoveInfo MarchingInfo= 5;//行军路线
	optional int32 xEntityType		 	 = 6;//类型
	optional int32 AreaID 		 	 = 7;//区服ID
}
//MSG_S2C_NTF_MARCHINGTOMEINFOLIST                = 2546;     //向我行军信息
message NTFNTFMoveToMeInfoList
{
	repeated NTFMoveToMeInfo xmoveList = 1;//行军的信息
	optional int32 optType		 	   = 2;//0 全量，1增量增加，2删除
	optional GUID xEntityID		 	   = 3;//单位ID
}

message ObjectInfoForSearch
{
	required GUID object_id					 = 1;
	required int32 object_type				 = 2;	//ObjectType
	required string class_name				 = 3;	//数据同步系统会用到，对应不同的数据类型
	required Point2D cur_pos				 = 4;	//当前位置坐标，MOT_CITY_BUILDING这个值是 city的坐标，在city内的相对坐标在property中（后面加上场景ID和组ID）
	optional int64 config_id				 = 5;	//MOT_CITY_BUILDING、MOT_MONSTER、MOT_RESOURCES 会有对应的配置ID
	optional int32 gather					 = 6;	//采集状态 0：未采集 1：采集中
}
//  MSG_S2C_RSP_OBJECT_LIST_FOR_SEARCH              = 2523;     //回复主城周围object list for search
message S2CRspObjectListForSearch
{
	repeated ObjectInfoForSearch object_list	= 1;
	optional int32 rsp_level					= 2; // 返回搜索结果的等级
}

// MSG_S2C_RSP_SEARCH_SAND_WORM                  = 2536;   // 返回搜索沙虫怪信息
message S2CRspSearchSandWorm
{
	optional ObjectInfoForSearch sand_worm	= 1;
}

message ObjectIDTypePair
{
	required int32 object_type			 = 1;
	required GUID object_id				 = 2;
}
//	MSG_S2C_NTF_MAP_OBJECT_DELETE					= 2504;		//地图单位（资源点、野怪、队伍等）删除、离开视野通知
message S2CNTFMapObjectDelete
{
	enum DeleteType
	{
		OTHER						 = 0;
		LEVAE_VIEW_RANGE			 = 1;
		SGOBJECT_JOIN_BUILDING		 = 2;
		JOIN_ASSEMBLE				 = 3;
	}
	repeated ObjectIDTypePair object_list					 = 1;
	optional int32 delete_type								 = 2;	//删除类型，DeleteType
}

//	MSG_C2S_REQ_OBJECT_MOVE						= 2402;
message C2SReqObjectMove
{
	required GUID object_id					 = 1;
	required MOMoveInfo move_info			 = 2;		//寻路路径点
}

//	MSG_S2C_NTF_OBJECT_MOVE						= 2403;
message S2CNTFObjectMove
{
	required GUID object_id					 = 1;
	required bytes move_info_bata			 = 2;	//MOMoveInfo
	// required MOMoveInfo move_info			 = 2;		//寻路路径点
}
//	MSG_C2S_REQ_MAP_OBJECT_POSITION_VERIFY			= 2505;		//请求对象坐标（校验位置）
message C2SReqMapObjectPositionVerify
{
	required GUID object_id					 = 1;
	optional int64 request_id				 = 2;	//请求ID
	optional int32 area_id					 = 3;
}

//	MSG_S2C_RSP_MAP_OBJECT_POSITION_VERIFY			= 2506;		//请求对象坐标应答（校验位置）
message S2CRspMapObjectPositionVerify
{
	required Point2D pos					 = 1;	//位置 
	required GUID object_id					 = 2;
	optional int64 request_id				 = 3;	//请求ID
	optional int32 area_id					 = 4;
}
//data 一个服有多少个场景集合
message ScenceGroupInfo
{
	required int64 Scence_ID				 = 1;//场景ID
	required int32 Group_id					 = 2;//group_ID
	required int32 senceclone_type			 = 3;//地图类型	
}


enum EMarchingType
{
	MT_None					 = 0;	//服务器使用 
	MT_Move					 = 1;	//移动
	MT_Attack				 = 2;	//攻击
	MT_Collection			 = 3;	//采集
	MT_TacticalBuilding		 = 4;	//建造战术建筑(废弃)

	MT_TacTicalBuildGarrison = 5;	//战术建筑的驻守（目前服务器使用）(废弃)
	MT_Return				 = 6;	//回城
	MT_SiegesMove			 = 7;	//包围点移动	服务器使用
	MT_Chase				 = 8;	//追击 服务器使用
	MT_Stop					 = 9;	//停止移动 服务器使用
	MT_Patrol				 = 10;	//巡逻 服务器使用
	MT_Convene				 = 11;	//调动 服务器使用.(废弃)
	MT_Assemble				 = 12;	//参加集结
	MT_CarIn				 = 13;	//车进入建筑(废弃)
	MT_ReturnCity			 = 14;	//拖拽回主城
	MT_Garrison				 = 15;	//驻守建筑
	MT_Scout				 = 16;	//侦查
	MT_ScoutReturn			 = 17;	//侦查返回
	MT_ExploreReturn		 = 18;	//探索返回
	MT_MoveItem		 		 = 19;	//向道具移动
	MT_BORN               	 = 20;  //出生
	MT_TakeRewardBox       	 = 21;  //捡取宝箱
    MT_ESCORT                = 22;  //押镖
	MT_WorldBoss             = 23;  //打世界Boss
}

message MarchingSoldier
{
	optional GUID sg_id								 = 1;	//如果选择已有队伍
	optional MOSoldierGroup soldier_group			 = 2;	//创建新的部队
	repeated Point2D path							 = 3;	//行军路径
	optional int64 cost_time						 = 4;	//行军耗时	毫秒
	optional int32 object_type						 = 5;	// 对象类型
}

message SoldierSelect
{
	enum SelectType
	{
		EXIST_SOLDIER_GROUP					 = 1;	//选择已有队伍
		CREATE_SOLDIER_GROUP				 = 2;	//从城市创建队伍
	}
	
	optional int32 type								 = 1; 	//SelectType
	//optional int32 sg_list_limit					 = 4;	//服务器使用
	repeated MarchingSoldier soldiers				 = 6;	//队伍信息
}
//	MSG_C2S_REQ_DUNGEON_MARCHING				= 2410;	//副本行军
//	MSG_C2S_REQ_MARCHING						= 2411;	//行军
message C2SReqMarching
{
	required int32 type								 = 1;	//EMarchingType
	optional GUID target_id							 = 2;	//MT_Assemble 集结ID MT_Attack MT_Collection MT_Garrison  MT_Return(战术建筑GUID)
	optional Point2D target_pos						 = 3;	//MT_Move MT_TacticalBuilding
	optional SoldierSelect soldier					 = 4;	//队伍信息
	optional int64 config_id						 = 6;	//MT_TacticalBuilding 战术建筑ID
	optional int32 is_auto_return					 = 8;	//攻击结束是否自动回城 0 不自动回城 1 自动回城
	optional GUID city_id							 = 9;	//MT_Assemble 集结的城市ID 
	optional int32 result							 = 10;	//服务器使用	SGDefine::EGEC_SUCCESS 成功 SGDefine::EGEC_UNKOWN_ERROR 失败
	optional GUID marching_city_id					 = 11;	//服务器使用	行军city
	optional bool bRobotMove						 = 12; 	//服务器使用 机器人行军
	optional bool client_path_fail					 = 13; 	//客户端寻路是否失败， true 失败，使用服务器寻路，不填或者false使用客户端路径
	optional int32 target_type						 = 14;	//目标类型
	optional int32 create_type						 = 15;
	optional int32 attack_count						 = 16;  // NpcTown 拆墙 攻击次数
	optional GUID target_alliance_id				 = 17;	// 目标联盟ID
}
//	MSG_S2C_RSP_MARCHING						= 2414;	//消息提示暂时没有 先用这条消息代替
message S2CRspMarching
{
	enum MsgCode
	{
		SUCCESS					 = 0;	//成功  不会发给客户端
		SYS_ERROR				 = 1;	//服务器数据错误
		RESOURCE_NOT_ENOUGH		 = 2;	//资源不足
		POSITION_ERROR			 = 3;	//错误位置
		BUILDING_COUNT_LIMIT	 = 4;	//建筑数量上限
	}
	required int32 msg_code					 = 1;		//ErrorCodeType
	optional int32 index					 = 2;	//队伍 index 0开始
	optional int32 marching_type			 = 3;	//行军类型
	optional int32 object_type				 = 4;	//对象类型
}

// // MSG_C2S_REQ_MARCHING_TRY_OUT                = 2418; // 获取采集信息
// message C2SReqMarchingTryOut
// {
// 	optional GUID target_id							 = 1;	//采集目标ID
// 	optional SoldierSelect soldier					 = 2;	//队伍信息
// }

// // MSG_S2C_RSP_MARCHING_TRY_OUT                = 2419; // 采集信息返回
// message S2CRspMarchingTryOut
// {
// 	enum MsgCode
// 	{
// 		SUCCESS					 = 0;	//成功  
// 		SYS_ERROR				 = 1;	//服务器数据错误
// 	}
// 	optional int32 msg_code					 = 1;		//ErrorCodeType
// 	optional int64 during_time				 = 2;		// 持续时间（采集）
// }

//	MSG_C2S_REQ_TACTICAL_BUILDING_OPTIONS		= 2414;	//战术建筑相关操作
enum TTCBuildingOptType
{
	TBOT_Remove				 = 1;	//拆除战术建筑
	TBOT_Convene			 = 2;	//调动部队
	TBOT_Evacuate			 = 3;	//撤离
	TBOT_SoldierReturn		 = 4;	//召回部队
}
message C2SReqTacticalBuildingOptions
{
	required int32 type							 = 1;	//TTCBuildingOptType
	required GUID building_id					 = 2;	//战术建筑ID
	optional SoldierSelect soldier				 = 3;	//队伍信息 TBOT_Convene 类型操作需要
}
	//临时协议
//	MSG_C2S_REQ_MAKE_PRODUCT					= 2415;	//建筑生产操作
//建筑类型
enum BuildingType	
{
	BLDT_CityBuilding				 = 1;	//主城内地上建筑
	BLDT_TacticalBuilding			 = 2;	//战术建筑
}
message C2SReqMakeProduct
{
	required int32 building_type				 = 1;	//建筑类型 BuildingType
	required GUID building_id					 = 2;	//建筑GUID
	required int64 product_id					 = 3;	//生产产品ID
	optional int32 count						 = 4;	//生产数量
}

//	MSG_C2S_REQ_TAKE_PRODUCT					= 2416;	//获得生产产品
message C2SReqTakeProduct
{
	required int32 building_type				 = 1;	//建筑类型 BuildingType
	required GUID building_id					 = 2;	//建筑GUID
	required int32 product_row					 = 3;	//产品对应 record 中的行号
}

//data 一个服一个一个场景的一个副本为一个集合
message GridInfo
{
	required GUID grid_id					 = 1;//GridID
	required int64 Scence_ID				 = 2;//场景ID
	required int32 Group_id					 = 3;//group_ID
	repeated GUID xSaveObjectID				 = 4;//需要保持的objectid（城市id，部队id，联盟建筑）	
}

//MSG_SS2DB_REQ_LOAD_ALL_SCENCEOBJECT_INFO	= 7101; //申请获取大地图信息
message SS2DBReqLoadAllScenceObjectInfo
{	
	required int32 Group_id				 = 1;
	required int64 Scence_ID			 = 2;   //大地图的地图ID
	required int32 senceclone_type		 = 3;   //大地图的地图ID
}

//MSG_SS2DB_RSP_LOAD_SCENCEOBJECT_INFO		= 7102; //返回地图部队信息
message SS2DBRspLoadAllScenceObjectInfo
{
	required int64 Scence_ID			 = 1;   //大地图的地图ID
	required int32 senceclone_type		 = 2;   //大地图的地图ID
	required int32 Group_id				 = 3;
	repeated MapObjectInfo xObjectList	 = 4;	//分批给，一批一部分
}

//MSG_SS2DB_UPDATE_SCENCEOBJECT_INFO			= 7103; //保存部队等object信息.GS->DB
message SS2DBUpdateScenceObjectInfo
{
	required MapObjectInfo xObject	 	 = 1;	//分批给，一批一部分
}

// MSG_SS2DB_UPDATE_GLOBAL_AREA        		= 7104; //更新全局信息
message SS2DBUpdateGlobalArea
{
	optional int32 area_id				= 1;   //小区ID
	optional PMsDTO pms_data 			= 2;   //小区数据
}

//MSG_GS2SS_PLAYERONLINEVIEW					= 7151;// 通知大地图，玩家上线，玩家城市信息发送给前端。
message GS2SSUPlayerOnLineView
{
	enum PlayerOnlineType
	{
		EPOT_LOCAL				 	= 0;	//成功	
		EPOT_CROSS_SERVER			= 1;	//服务器数据错误
	}
	required GUID player_id 		= 1;
	required int32 gate_id			= 2;   //所在的网关ID
	required int32 game_id		 	= 3;   //所在的gameid
	required GUID city_id 			= 4;	
	required PlayerOnlineType eOnLineType = 5;   //夸服在线kvk
	optional int32 area_id		 	= 6;   //夸服在线kvk
	optional bool is_login			= 7;	//是否是登录，有可能是切场景
	optional int64 language			= 8;
	optional int32 enter_scence_type		= 9;
}

//	MSG_GS2SS_RPC_PLAYEROFFLINEVIEW				= 50036;
//MSG_GS2SS_PLAYEROFFLINEVIEW					= 7152;// 通知大地图，玩家下线，
message GS2SSUPlayerOffLineView
{
	enum PlayerOffViewType
	{
		POVT_OFFLINE		 = 1;
		POVT_LEAVESCENE		 = 2;
	}
	required GUID player_id = 1;
	required GUID city_id	= 2;
	optional int32 type     = 3;	//
}

//MSG_SS_GS_SOLDIER_BACK_CITY					= 7153;// 部队回到城
message SS2GSSoldierGroupBacyCity
{
	required GUID city_id	= 1;	
	repeated ResourseInfo infos = 2;	//总的负载资源数据
	repeated ResourseInfo gather_infos = 3;	//采集的资源数据
	repeated ResourseInfo radar_gather_infos = 4;	//雷达采集的资源数据
}


//MSG_C2S_TEST_LUAMSG							= 1301; // 应答客户端
message C2STestLuaMsg
{
	optional GUID  player_id 		= 1; //请求的信息
	optional int32 nResult 			= 2; //处理结果
	optional GUID xcityID 			= 3; //城市ID
}
//---------------------------demo相关end------------------------------


//	MSG_S2G_NTF_GENERAL_PROPERTY					= 2510;
//message S2CNtfGeneralProperty


// MSG_S2G_NTF_MEMBER_PROPERTY						= 2512;
message S2CNtfMemberProperty
{
	optional GUID id							 = 1; // 主体对象ID(比如CityID)
	repeated S2CNtfGeneralProperty members		 = 2; // 成员属性
}

//	MSG_C2S_REQ_SEARCH_OBJECT                       = 2520;     //请求搜索
message C2SReqSearchObject
{
	enum ObjectType
	{
		MONSTER = 4;	//野怪
		RESOURCES = 5;	//资源点
	}
	optional int32 object_type				 = 1;	//搜索类型 	
	optional int32 resource_type			 = 2;	//资源类型
	// ITEM_SUB_TYPE_FOOD = 10001; // 食物资源
	// ITEM_SUB_TYPE_WOOD = 10002; // 净水资源
	// ITEM_SUB_TYPE_IRON = 10003; // 金属资源
	// ITEM_SUB_TYPE_OIL = 10004; // 石油资源	
	optional int32 level			     	 = 3;	//搜索等级			
	optional int32 monster_type			 	 = 4;	//怪物类型
}

//	MSG_S2C_RSP_SEARCH_OBJECT                       = 2521;     //回复搜索结果
message S2CRspSearchObject
{
	enum ErrorCodeType
	{
		SUCCESS				 = 0;	//成功	
		NOT_FOUND			 = 1;	//未找到
	}
	required int32 err_code  = 1;	//ErrorCodeType
	optional GUID id		 = 2;
	required int32 type 	 = 3;	//搜索类型: 怪物, 食物...
	optional Point2D pos 	 = 4;	//坐标点
	optional int64 config_id = 5;	//怪物对应的配置ID
}

// MSG_C2S_REQ_ADD_MARK                            = 2525;     //添加标签
message C2SReqAddMark
{
	optional GUID object_id	= 1;
	optional string name = 2;//标签名
	required int32 type = 3;//类型MarkType     MARK_TYPE_SPECIAL       = 1; 特殊 MARK_TYPE_FRIEND        = 2; 友方 MARK_TYPE_ENEMY         = 3; 敌方
	required Point2D pos = 4;//坐标
	optional int32 server_id = 5;//服务器id(战区id)
	optional int32 alliance_mark_index = 6;  //联盟标记图案下标 从1开始
	optional int32 mark_object_type = 7;  //联盟标记显示位置，是否偏移0.5服务器格（1：偏移）
	optional int64 start_time = 8;      //设置时间
	optional int32 join_schedule = 9;   //加入日程 0:否 1:是
}

// MSG_C2S_REQ_EDIT_MARK                           = 2526;     //编辑标签
message C2SReqEditMark
{
	required GUID object_id = 1;
	optional string name = 2;//标签名
	optional int32 type = 3;//类型MarkType
	optional int32 alliance_mark_index = 4;  //联盟标记图案下标 从1开始
	optional int32 mark_object_type = 5;  //联盟标记显示位置，是否偏移0.5服务器格（1：偏移）
	optional int64 start_time = 6;      //设置时间
	optional int32 join_schedule = 7;   //加入日程 0:否 1:是
	optional Point2D pos = 8;//坐标
	optional int32 server_id = 9;//服务器id(战区id)	
}

// MSG_C2S_REQ_DEL_MARK                            = 2527;     //删除标签
message C2SReqDelMark
{
	message DelMark
	{
		optional GUID object_id = 1;	
		optional int32 type 	= 2;  //类型MarkType
	}

	repeated DelMark del_mark_list = 1;  
}

enum MOSecondaryState
{
    MOSS_SIDLE					 = 0;   //空闲 驻扎
    MOSS_COLLECT_RESOURCE		 = 1;   //采集
    MOSS_GARRISON				 = 2;   //驻守
	
	MOSS_ASSEMBLE_PREPARE		 = 10;	// 集结准备
	MOSS_ASSEMBLE_MARCHING		 = 11;	// 集结行军
};
enum MOBasicState
{
	MOBS_NORMAL						 = 0;
	MOBS_DEAD						 = 1;
	MOBS_FIGHTING					 = 2;
};
enum EMSolderType
{
	EMST_SOLDIERGROUP = 0;		// 普通部队
	EMST_EXPLORE_SOLDIER = 1;	// 探索部队
    EMST_ESCORT_SOLDIER = 2;	// 押镖部队
	EMST_WORLD_BOSS = 3;	// 世界boss部队
};

//	MSG_S2C_NTF_SOLDIER_GROUP_STATE									 = 2705;//玩家自己队伍状态变更
message NTFSoldierGroupState
{
	required GUID soldier_group_id				 = 1;
	required int32 state						 = 2;		//MOSecondaryState
	optional GUID bind_building					 = 3;		// 绑定的战术建筑 (废弃)
	optional GUID bind_obj_id					 = 4;	//驻守、采集等队伍所在对象guid
	optional Point2D sg_pos						 = 6;		// 队伍当前的位置
	
	optional GatherStateInfo gather_info	 	 = 7;	//采集信息
	optional GarrisonStateInfo garrison_info	 = 8;	//驻守信息
	optional AssembleStateInfo assemble_info	 = 9;	//集结信息
	optional S2CNtfTactical tactical_info		 = 10; // 战术建筑伤兵信息 （废弃）
	optional int32 nSolderType					 = 11;	//EMSolderType 0 正常部队 1 探索部队
}
message GatherStateInfo
{
	optional GUID resource_guid				 = 1;	//资源点guid
	optional int64 resource_config			 = 2;	//资源点 配置ID
	optional int32 store					 = 3;	//当前储量
	optional int64 start_time				 = 4;
	optional int64 end_time					 = 5;
	optional Point2D position				 = 6;
	optional int64 can_store				 = 7;	//可以采集的最大量
}
message GarrisonStateInfo
{
	optional GUID building_guid						 = 1;
	optional Point2D building_position				 = 2;
	optional int32 building_type					 = 3;	//ObjectType
	optional string player_name						 = 4;
	optional int64 config_id						 = 5;
}
message AssembleStateInfo
{
	optional GUID assemble_guid						 = 1;
	optional GUID assemble_target					 = 2;	//集结目标id
}

message NTFAlianceInfo
{
	optional string alliance_tag	= 1; // 联盟简称
}

//	MSG_S2C_NTF_SOLDIER_GROUP_REMOVE								 = 2701;//玩家自己队伍删除
message NTFSoldierGroupRemove
{
	required GUID sg_id						 = 1;	//删除队伍的GUID
}

//	MSG_S2C_NTF_CITY_SOLDIERS_INFO									 = 2702;//通知客户端当前城市中 兵种数量 总量\变化
//	MODT_IN_CITY_SG_INFO
message NTFInCitySoldiersInfo
{
	repeated MOSoldier soldiers		 = 1;
	optional int32 source_type		 = 2;
	optional int32 power_refresh	 = 3;	//是否需要刷新战力，>0 刷新
	optional int64 barrack_power	 = 4;	//兵营中正在升级的士兵战力
}

//	MSG_C2S_REQ_SET_PRESET_SOLDIER_GROUP							 = 2703;//请求保存预设队伍
message ReqSetPresetSoldierGroup
{
	optional int32 index					 = 1;		//从 0 开始
	optional MOSoldierGroup sg_info			 = 2;
	optional int32 type 					 = 3;	// 0 设置，1 删除(删除只需要填 index)
	optional string name					 = 4;	//预设队伍名字
}


message TeamRecord
{
	repeated int64 hero_list				 = 1;	//英雄列表
}

// MSG_C2S_REQ_SET_TEAM_RECORD                                      = 2724; // 设置编队存档/删除/重命名
message ReqSetTeamRecord
{
	optional int64 uid					 	 = 1;		// 存档uid
	optional TeamRecord team_record			 = 2;
	optional int32 type 					 = 3;		// 0 设置, 1 删除(删除只需要填 uid), 2 重命名
	optional string name					 = 4;		// 存档名称
}

message SoldierGroupObj
{
	required GUID sg_id							 = 1;
	required MOSoldierGroup soldier_info		 = 2;
	required NTFSoldierGroupState state			 = 3;
	optional int32 basic_state					 = 4;	//属性 BasicState
	optional int32 speed						 = 5;

	repeated ResourseInfo plunders				 = 12;// 掠夺信息
	repeated ResourseInfo gathers				 = 13;// 采集信息
	repeated ResourseInfo alliances				 = 14;// 联盟资源信息
	repeated GatherMail gather_mails 			 = 15;// 采集邮件
	
	repeated ResourseInfo radar_gathers	 = 16;	// 雷达采集信息
}
//	MSG_C2S_NTF_INBUILDING_SOLDIER_GROUP							 = 2704;//通知客户端在建筑中（不在地图上）的队伍信息
message NTFInBuildingSoldierGroup
{
	enum CreateType
	{
		OTHER						 = 0;	//其他类型
		PLAYER_INIT					 = 2;	//玩家数据初始化下发
	}
	repeated SoldierGroupObj obj_list			 = 1;
	optional int32 create_type					 = 2;	//创建类型
}
//	MSG_RPC_G2S_REQ_CITY_SOLDIER_UPDATE			= 50027;	//game 士兵变化推送给场景
message G2SReqCitySoldierUpdate
{
	enum UpdateType
	{
		Add			 = 1;
		Reduce		 = 2;
	}
	required GUID city_id			 = 1;
	optional int32 result			 = 2;
	required UpdateType type		 = 3;
	repeated MOSoldier soldiers		 = 4;
	optional int32 source_type		 = 5;	//
	optional int64 source_param		 = 6;	//
}

//  MSG_GS2SS_RPC_CITY_MOVE_RECOMMEND           = 50022;     //迁城推荐点位RPC
message GS2SSRpcCityMoveRecommend
{
	required GUID city_id			 = 1;
	required int64 type 			 = 2;
	optional Point2D pos 			 = 3;
	optional int32 result			 = 4;
	optional GUID alliance_id		 = 5; // 联盟ID
	optional GUID alliance_leader_city_id = 6; // 盟主CityID
}

//	MSG_GS2SS_RPC_CITY_MOVE			= 50028;	//game 高迁推送给场景
message GS2SSRpcCityMove
{
	required GUID city_id			 = 1;
	required int64 type 			 = 2;
	optional Point2D pos 			 = 3;
	optional int32 result			 = 4;
	optional int32 new_point_type	 = 6;	//，
	optional int64 old_town_misc	 = 7;	//
	optional int64 new_town_misc	 = 8;	//
    optional GUID target_id          = 9;   //移动到目标ID附近
}

//	MSG_MS2GS_RPC_GET_ALLIANCE_LEADER_NPOINT			= 50028;	//game 高迁推送给场景
message GS2SSRpcGetAllianceLeaderNPoint
{
	optional GUID city_id			 = 1;
    optional GUID leader_id          = 2;   
    optional bool balliance_territory = 3;  //是否联盟领土
    optional Point2D pos 			 = 4; 
    optional int32 result			 = 5;
}

message CityBarrackPower
{
	optional int32 soldier_type			 = 1;
	optional int32 power				 = 2;
}
message CitySGListSave
{
	optional MOSoldierGroup incity_soldiers		 	 = 1;
	repeated SoldierGroupObj obj_list				 = 2;
	repeated CityBarrackPower barrack_power			 = 3;
	optional bool is_cross							 = 4;	//是否在跨服状态
}

message CitySGEscortSave
{
    repeated MOSoldierGroup escort_list		 	 = 1;
}

// MSG_SS2GS_BREAK_WALL                             = 2616; // 场景服通知game服城墙破坏
message SS2GSBreakWall
{
	optional int64 break_wall = 1; // 造成城墙破坏值
}

// MSG_SS2GS_CITY_SGLIST                            = 2615; // 城市和部队信息
message SS2GSCitySGList
{
	optional CitySGListSave data	 = 1;
}

message HeroUpdateData
{
	enum UpdateSource
	{
		TalentSkillAdd					 = 1;//天赋技能增加
		HeroStar						 = 2;//英雄升星
		HeroLevel						 = 3;//英雄升级
		HeroSkillLevelUP				 = 4;//技能升级
		HeroSkillAdd					 = 5;//被动技能解锁
		TalentSkillReset				 = 6;//天赋技能重置
		CaptainChange					 = 7;//统帅职位变更
		EquipChange						 = 8;//英雄装备解锁或者升级
		EquipSuitUpdate					 = 9;//英雄装备套装解锁
		EquipNewLevelChange				 = 10;//装备精炼或觉醒等级变化
	}
	
	required UpdateSource source_type		 = 1;	//来源类型
	optional int64 new_config			 	 = 2;	//英雄星级的配置ID HeroStar、HeroLevel、CaptainChange、EquipChange、EquipSuitUpdate
	repeated HeroSkill new_skill			 = 3;	//HeroSkillAdd、HeroSkillLevelUP、TalentSkillAdd
	repeated int64 old_cfg					 = 4;	//变化之前的config id， HeroSkillLevelUP、EquipChange、EquipSuitUpdate
	optional HeroEquipNew old_equip			 = 5;	//EquipLevelChange
	optional HeroEquipNew new_equip			 = 6;	//EquipLevelChange
}

//	MSG_GS2SS_NTF_MARCHING_HERO_UPDATE								 = 2706;//game 通知 场景服 英雄数据变化 需要更新到队伍数据中
message OutsideHeroUpdate
{
	required int64 hero_id					 = 1;	//英雄ID
	optional int64 hero_power			 	 = 2;	//英雄战力 TalentSkillAdd HeroStar HeroLevel HeroSkillLevelUP HeroSkillAdd
	repeated HeroUpdateData datas			 = 3;
}

// MSG_SS2GS_CREATE_TACTICAL_BUILD
message SS2GSCreateTacticalBuild
{
	optional int64 nConfigID	=1;
	optional GUID xCityID		=2;
	optional GUID xTacticalID	=3;
	optional Point2D xPos		=4;
	optional int32 result 		=5;
}

message AllianceWarSoloFight  //联盟战争solo 
{
	optional GUID player_id 		= 1;  //玩家ID
	optional int64 avatar_id 	    = 2;  //头像
	optional int64 avatar_box 		= 3;  //头像框
	optional string name            = 4;  //玩家名称
	optional string alliance_tag    = 5;  //联盟简称
	optional Point2D pos            = 6;  //坐标
	optional bool attack            = 7;  //是否攻击防 true攻击方 false 防守方
	optional int64 cost_time        = 8;  //消耗时间
	optional GUID unique_id         = 9;  //唯一ID (SoldierGroupID)
	optional int64 start_time       = 10; //开始时间
	optional string avatar_url 	    = 11;  //头像
	optional GUID object_id			= 12;  //对象ID
}

message AllianceWarSoloInfo
{
	enum SoloType
	{
		ATTACK = 1;   //攻击
		SCOUT  = 2;   //侦察
	}

	optional int32 solo_type = 1;  //类型
    repeated AllianceWarSoloFight fight_list = 2; //战斗信息  //第一条己方联盟成员
    optional GUID unique_id         = 3;  //唯一ID (SoldierGroupID)
	optional AssembleInfo war_info = 4; //联盟战争信息
}

message UICityInfo
{
	required GUID city_id				 = 1;	//城市guid
	required GUID player_id				 = 2;	//所属玩家guid
	required string player_name			 = 3;	//玩家名字
	required Point2D city_pos			 = 4;	//城市位置
	required GUID guild_id				 = 5;	//工会guid
	optional int64 avatar_id			 = 6; //玩家头像ID
	optional int64 avatar_box			 = 7;	//头像框id
	optional string avatar_url			 = 8;	//头像框id
	optional string alliance_tag		 = 9; // 联盟简称
}
message UITargetInfo
{
	optional int32 obj_type				 = 1;	//对象类型	ObjectType
	optional int64 config_id			 = 2;	//一部分 ObjectType 会有配置ID
	optional Point2D target_pos			 = 3;	//目标位置
	optional GUID target_id				 = 4;	//目标guid
	optional string player_name			 = 5;	//玩家名字
	optional int64 avatar_id			 = 6; //玩家头像ID
	optional int64 avatar_box			 = 7;	//头像框id
	optional string avatar_url			 = 8;	//头像框id
	optional string alliance_tag		 = 9; // 联盟简称
	optional GUID alliance_id			 = 10; // 联盟ID
}
//
message AssembleSoldierGroup
{
	enum EAssembleSoldierState
	{
		IN_MARCHING			 = 1;	//行军中
		IN_ASSEMBLE			 = 2;	//集结中
	}
	required int32 state						 = 1;	//EAssembleSoldierState
	required GUID player_id						 = 2;	//所属玩家guid
	required GUID city_id						 = 3;	//所属city guid
	required MOSoldierGroup sg_info				 = 4;	//队伍信息
	optional int64 assemble_time				 = 5;	//预计到达时间戳 毫秒
	optional string player_name					 = 6;
	optional int64 power						 = 7;	//
	optional int64 avatar_id					 = 8; //玩家头像ID
	optional int64 avatar_box					 = 9;	//头像框id
	optional string avatar_url					 = 10;	//头像框id
	optional string alliance_tag				 = 11; // 联盟简称
	optional int64 begin_time				 	 = 12; // 开始行军时间
}

message AssembleInfo
{
	enum EAssembleState
	{
		PREPARING			 = 1;
		WAITING				 = 2;
		MARCHING			 = 3;
		ATTACKING			 = 4;
	}
	enum Type
	{
		ASSEMBLE 	= 1; //集结
		ATTACK 		= 2;   //攻击
		SCOUT  		= 3;   //侦察
		ASSEMBLED 	= 4; //被集结

	}
	optional int32 state						 = 1;	//EAssembleState
	optional GUID assemble_id					 = 2;	//集结guid
	optional UITargetInfo target				 = 3; 	//集结目标
	optional UICityInfo assemble_city			 = 4;	//集结城市
	repeated AssembleSoldierGroup sg_list		 = 5; 
	optional int64 state_end_time				 = 6;
	optional int64 soldier_limit				 = 7;	//士兵数量限制
	repeated int32 recommend_soldier			 = 8;	//推荐士兵分类 soldier 表 category
	optional int64 state_start_time				 = 9;
	optional int32 assemble_obj_state			 = 10;	//集结队伍状态 	//集结单位的 basic state 	
	//optional Point2D assemble_obj_pos			 = 11;	//集结队伍位置
	optional bytes marching_info 				 = 12;
	optional int64 speed						 = 13;
	optional int32 type 				     = 14;  //类型	
	optional int32 assemble_type			 = 15;	//集结类型 EAssembleType 
	optional int32 area_id					 = 16; //集结所在区服	
}
//	MSG_S2C_NTF_GUILD_ASSEMBLE_INFO										 = 2761;	//玩家上线广播工会集结信息
message NTFGuildAssembleInfo
{
	enum EInfoType
	{
		ALL			 = 1;
		ADD			 = 2;
		REMOVE		 = 3;
		UPDATE		 = 4;
	}
	required int32 type							 = 1;	//EInfoType
	repeated AssembleInfo assemble_list			 = 2;
	optional GUID del_id						 = 3;	//要删除的集结ID	
	optional int32 num							 = 4;   //当前总数量
	optional int32 reason						 = 5;	//原因 ETeamFinishType
}
//	MSG_C2S_REQ_UPDATE_ASSEMBLE_SG										 = 2762;	//请求更新集结信息（战斗状态的集结，士兵数量由客户端请求更新，服务器不主动推送）
message ReqUpdateAssembleSG
{
	repeated GUID assemble_list				 = 1;
	repeated GUID city_list					 = 2;
}

//    MSG_C2S_REQ_UPDATE_MARCHING_TO_SELF                              = 2727;// 更新预警信息
message ReqUpdateWarningMarching
{
}

//	MSG_C2S_REQ_NEW_ASSEMBLE											 = 2763;	//请求发起集结
message ReqNewAssemble
{	
	required GUID target_id					 = 1;	//集结目标GUID
	required MOSoldierGroup sg_info			 = 2;	//集结队伍
	repeated int32 recommend_soldier		 = 3;	//推荐士兵分类 soldier 表 category
	required int32 prepare_time				 = 4;	//准备时间分钟
	optional int32 target_type				 = 5;	//集结对象类型 ObjectType
	optional int32 assemble_type			 = 6;	//集结类型 EAssembleType 
	optional GUID target_alliance_id		 = 7;	//集结目标联盟ID
}

//	MSG_C2S_CANCEL_ASSEMBLE												 = 2764;	//取消集结
message ReqCancelAssemble
{
	required GUID assemble_id					 = 1;	//集结GUID
	optional GUID target_id						 = 2;	//服务器使用 目标guid
	optional GUID target_alliance_id			 = 3;	//服务器使用 目标联盟guid
	optional int32 reason						 = 4;	//取消原因
}
//	MSG_SS2AS_NTF_BE_ASSEMBLE_INFO										 = 2779;	//通知被集结信息
message NTFBeAssembleInfo
{
	optional int32 type							 = 1;	//0取消， 1 攻击
	optional GUID assemble_id					 = 2;	//集结GUID
	optional GUID target_id						 = 3;	//目标guid
	optional GUID assemble_city					 = 4;	//发起集结的cityid
	optional int32 area_id						 = 5;	//
	optional int32 reason						 = 6;
	optional AssembleInfo assemble_info			 = 7;
}

//参加集结
//集结行军

//	MSG_S2C_NTF_ASSEMBLE_SOLDIER_GROUP_ADD								 = 2765;	//有队伍加入集结
message NTFAssembleSoldierGroupAdd
{
	required GUID assemble_id							 = 1;	//集结guid
	required AssembleSoldierGroup soldier_group			 = 2; 
}
//	MSG_S2C_NTF_ASSEMBLE_SOLDIER_GROUP_REMOVE							 = 2766;	//集结队伍推出
message NTFAssembleSoldierGroupRemove
{
	required GUID assemble_id					 = 1;	//集结guid
	required GUID sg_id							 = 2; 
}

//	MSG_S2C_NTF_ASSEMBLE_STATE_UPDATE									 = 2767;	//集结状态变化
message NTFAssembleStateUpdate
{
	required GUID assemble_id					 = 1;	//集结guid
	required int32 state						 = 2;	//EAssembleState
	optional int64 state_end_time				 = 3;
	optional int64 state_start_time				 = 4;
	// optional MOMoveInfo marching_info			 = 5;	//行军阶段的移动信息
	optional bytes marching_info 				 = 5;
	optional int64 speed						 = 6;	//行军阶段行军速度
}

//	MSG_GS2PS_RPC_NEW_ASSEMBLE			        = 50031; //发起新的集结
//	MSG_PS2SS_RPC_NEW_ASSEMBLE			        = 50032; //发起新的集结
message RPCNewAssemble
{
	optional int32 result						 = 1;
	optional GUID city_id						 = 2;
	required ReqNewAssemble req_info			 = 3;
	//optional int32 sg_list_limit				 = 4;
	optional int64 assemble_sg_limit			 = 5;
	optional AssembleInfo assemble_info			 = 6;
	optional GUID assemble_id					 = 7;
	optional GUID player_id						 = 8;
	optional bool target_repeated				 = 9;
	optional int32 assemble_type			 	 = 10;	//集结类型 EAssembleType
	optional int32 area_id						 = 11;	//city area
	
}
//	MSG_C2S_REQ_KICK_OUT_ASSEMBLE_SG									 = 2768;	//请求踢出集结队伍
message ReqKickOutAssembleSG
{
	required GUID assemble_id					 = 1;	//集结guid
	required GUID soldier_group					 = 2;	//要踢出的队伍GUID
}
//	MSG_C2S_REQ_LEAVE_ASSEMBLE											 = 2769;	//请求退出集结队伍
message ReqLeaveAssemble
{
	required GUID soldier_group					 = 1;	//自己队伍的guid
	required GUID assemble_id					 = 2;	//集结guid
	required GUID city_id						 = 3;	//集结所在城市ID
}

message NTFAssembleCityInfo
{
	optional GUID assemble_city					 = 1;	//集结城市
	optional bool be_attacked					 = 2;	// 0:集结 1:被集结
	optional int32 area							 = 3;
}

//	MSG_PS2SS_NTF_PLAYER_ASSEMBLE_INFO									 = 2770;
message NTFPlayerAssembleInfo
{
	repeated NTFAssembleCityInfo assemble_citys 	 = 1;
	required int32 gate_id							 = 2;
	required GUID player_id							 = 3;
	repeated AllianceWarSoloInfo solo_info_list 	 = 4;  //联盟战争solo信息
	optional int32 info_size						 = 5;
}

//	MSG_C2S_REQ_GARRISON_SOLDIER_GROUP_INFO				 = 2709;	//请求建筑内驻守队伍信息
message ReqGarrisonSoldierGroupInfo
{
	required GUID target_id					 = 1;	//目标guid
}
message GarrisonSGInfo
{
	required UICityInfo city_info					 = 1;	//玩家ID
	required MOSoldierGroup soldier_group			 = 2;
	optional int64 arrive_time						 = 3;	//到达毫秒时间戳（有的队伍再驻守途中）
	optional bool is_leader							 = 4;	//是不是队长
	optional int64 garrison_score_speed				 = 5;	//score = (nowtime - arrive_time)/1000 * garrison_score_speed /(60 * 10000)
}
//	MSG_S2C_RSP_GARRISON_SOLDIER_GROUP_INFO				 = 2710;	//建筑内驻守队伍信息
message RspGarrisonSoldierGroupInfo
{
	repeated GarrisonSGInfo sg_list			 = 1;	//队伍列表
	optional GUID building_id				 = 2;	//驻守建筑guid
	optional int32 max_soldier				 = 3;	//建筑最大容纳士兵数
	optional int32 cur_soldier				 = 4;	//当前士兵数量，按队伍加入时计算
}
//	MSG_C2S_REQ_GARRISON_LEADER_OPERATE								 = 2719;	//驻守队伍队长操作
message ReqGarrisonLeaderOperate
{
	enum EOpType
	{
		CHANGE_LEADER	 = 1;	//转让队长
		KICKOUT_MEMBER	 = 2;	//踢出成员
	}
	optional int32 type						 = 1;	//操作类型 EOpType
	optional GUID building_id				 = 2;	//驻守建筑guid
	optional GUID leader_sg					 = 3;	//当前执行操作的队长的队伍guid
	optional GUID target_sg					 = 4;	//目标队伍guid
}
//	MSG_C2S_RSP_GARRISON_LEADER_OPERATE								 = 2720;	//驻守队伍队长操作
message RspGarrisonLeaderOperate
{
	optional int32 type						 = 1;	//操作类型 EOpType
	optional GUID building_id				 = 2;	//驻守建筑guid
	optional GUID target_sg					 = 3;	//目标队伍guid
}

//	    MSG_C2S_REQ_GARRISON_R4_OPERATE                              = 2724;    //联盟官员操作
message ReqGarrisonR4Operate
{
	enum EOpType
	{
		KICKOUT_MEMBER	 = 2;	//踢出成员
	}
	optional int32 type						 = 1;	//操作类型 EOpType
	optional GUID building_id				 = 2;	//驻守建筑guid
	optional GUID target_sg					 = 3;	//目标队伍guid
	optional GUID alliance_id					 = 4;	//联盟ID
	optional GUID player_id					 = 5;	//自己的ID
}
//	MSG_C2S_RSP_GARRISON_R4_OPERATE                              = 2725;    //联盟官员操作
message RspGarrisonR4Operate
{
	optional int32 type						 = 1;	//操作类型 EOpType
	optional GUID building_id				 = 2;	//驻守建筑guid
	optional GUID target_sg					 = 3;	//目标队伍guid
}


message TecheGroup
{
	optional int32 nGroupID = 1;	//科技组ID
	optional int32 nlevel = 2;		//科技等级
}

//MSG_SS2GS_Create_SCOUT											 = 2716;// 创建侦查兵 扣资源
message SS2GSCreateScout
{
	optional int32 nLevel =1;
	optional int32 nTarget_Type = 2;
}


//MSG_S2C_NTF_ALL_MARCHING_TO_SELF									 = 2712;// 通知 预警框信息
message S2CNTFMarchingToSelf
{
	optional int32 marching_type = 1;
	optional string player_name = 2;
	optional int64 marching_endtime = 3;
	optional int64 hero_id = 4;
	optional MOSoldierGroup soldier_group = 5;	
	optional GUID self_guid = 6;
	optional Point2D self_pos = 7;
	optional GUID target_guid = 8; // 对方的ID
	optional int32 target_object_type = 9;// 对方的对象类型
	optional AssembleInfo assembledata = 10;//集结信息
	optional int64 avatar_box = 11;//  头像框
	optional string avatar_url = 12;//  地址
	optional int64 marching_starttime = 13;//  开始时间
	optional string alliance_tag = 14;//  联盟简称
	optional bool bAssemblewait = 15;//  是否是集结等待阶段
	optional GUID PlayerID = 16;//  对方的玩家ID

}

//MSG_S2C_NTF_ALL_MARCHING_TO_SELF									 = 2717;// 通知 预警框信息
message S2CNTFAllMarchingToSelf
{
	repeated S2CNTFMarchingToSelf marchings = 1;
}

//MSG_S2C_CANCEL_MARCHING_TO_SELF									 = 2718;// 通知 预警框信息
message S2CCancelMarchingToSelf
{
	optional GUID target_guid = 1; // 对方的ID
}

message PlayerSoldierGroup
{
	optional MailPlayerBasic target = 1;// 名字坐标等
	
	optional MOSoldierGroup soldier_group = 2;// 英雄部队数据
	
	optional bool bLeader = 3;
	
	optional int64 Power =4;
	
	repeated ResourseInfo Resource = 5;// 掠夺资源数据
	
	repeated ItemInfo DropInfo = 6;// 掉落信息
	
	optional bool bLose = 7;
	
	optional int64 maxLoad 				= 8;// 负重
	
	optional int64 AttackValue = 9;//总攻击力
	repeated IntPair kill_info = 10;
    optional int32 leftRewardCount = 11;   //剩余奖励次数
    
    optional int32 costEnergy = 12; //消耗体力
    
    repeated int64 killRewards = 13; //击杀奖励
    
    optional bool bAttachDrop = 14; //是否附件掉落

	repeated ItemInfo robEscortItemInfo = 15;// 掠夺押镖资源

}

message PlayerSoldierBrief
{
    optional MailPlayerBasic target = 1;// 名字坐标等
    repeated ItemInfo DropInfo = 2; // 掉落信息 
    repeated ResourseInfo Resource = 3;// 掠夺资源数据
    optional bool bLeader = 4;
    optional bool bLose = 5;
    optional int32 leftRewardCount = 6;   //剩余奖励次数
    optional bool bAttachDrop = 7; //是否附件掉落
	optional int32 index						 = 16;	//行军队列编号
	repeated MOSoldier PlayerSoldierInfoList = 17;	//士兵列表
}

// 侦查信息
message ScoutInfo
{
	optional int32 nLevel = 1;// 侦查等级
	
	repeated PlayerSoldierGroup player_group = 3;// 英雄部队数据
	repeated ResourseInfo resource = 4;// 资源数据
	
	optional int64 towerHp = 6;// 哨塔血量
	optional int32 towerlevel = 7;// 哨塔等级
	optional int64 towerAttack = 8;// 哨塔攻击力
	optional int64 wallHP = 9;// 城墙血量
	optional int64 nSoldierCount = 10;// 部队总数
	optional int64 nPower = 11;// 玩家战力
	repeated TecheGroup techList = 12;// 科技树
	
	optional int32 nSend2GameType = 13;// 服务器使用（到game获取的数据类型）
	optional GUID xPlayerID = 14;// playerID
	
	optional int64 maxWallHP = 15;// 城墙最大血量
	optional int64 maxTowerHp = 16;// 哨塔最大血量
	
	optional int64 nBuildHp	= 17;// 联盟建筑耐久值
	optional int32 buildstate = 18;// 联盟建筑状态
	optional int64 config_id = 19;//配置ID
	optional bool effect = 20;// 是否生效
	optional int64 monster_id = 21;// 野怪ID

	optional MailPlayerBasic owner_build = 22;// 名字坐标等
	optional int32 ObjectType = 23;// 类型 可能没有对象，
	optional GUID  object_id = 24; // 对象ID所在的
	optional int32 mail_game = 25;
}


//	MSG_C2S_REQ_ASSEMBLE_LEADER_PROPERTYS								 = 2771;	//请求集结队伍信息  队长属性和英雄技能
message ReqAssembleLeaderPropertys
{
	required GUID assemble_city				 = 1;	//要查询的集结所属city
	required GUID assemble_id				 = 2;	//要查询的集结id
}

message AssembleHeroSkill
{
	required int64 hero_id					 = 1;	//
	repeated int64 skill_list				 = 2;	//英雄技能
	repeated int32 skill_level				 = 3;
}

//	MSG_C2S_RSP_ASSEMBLE_LEADER_PROPERTYS								 = 2772;	//请求集结队伍信息  队长属性和英雄技能
message RspAssembleLeaderPropertys
{
	required GUID assemble_id					 = 1;	//集结id
	repeated GeneralProperty propertys			 = 2;
	repeated AssembleHeroSkill skills			 = 3;
	optional AssembleHeroSkill car_skills		 = 4;
}

//MSG_S2C_NTF_NPC_TOWN_REWARD = 3371
message S2CNtfNpcTownReward
{
	optional int64 config_id = 1;  //城镇ID
	optional GUID alliance_id = 2;  //帮会ID
}

//MSG_C2S_REQ_GET_ENROLL_NPC_TOWN_INFO = 3372
message C2SReqGetEnrollNpcTownInfo
{
	optional int64 sub_type = 1;
}

//MSG_C2S_REQ_ENROLL_NPC_TOWN = 3373
message C2SReqEnrollNpcTown
{
	optional int64 config_id = 1;  //城镇ID
	optional bool is_cancel = 2;  //是否取消报名
}

//MSG_S2C_NTF_ENROLL_NPC_TOWN = 3374
message S2CNtfEnrollNpcTown
{
	optional int64 sub_type = 1;
	optional int64 left_enroll_times = 2;
	optional int64 max_enroll_times = 3;
}

//MSG_C2S_REQ_ABANDON_NPC_TOWN                     = 3386;// 放弃城镇 ResultResponse回包 paramlist带放弃时间戳
message C2SReqAbandonNpcTown
{
	optional int64 config_id = 1;  //城镇配置ID
	optional bool is_cancel = 2; //是否取消弃城
}

// MSG_C2S_REQ_NPC_TOWN_STATUS                      = 3387; // 获取城镇战况 联盟战功排名 个人战功 击杀守军 拆除耐久度
message C2SReqNpcTownStatus
{
	optional int64 config_id = 1;  //城镇配置ID
}

// MSG_S2C_RSP_NPC_TOWN_STATUS					  = 3388; // 返回城镇战况
message S2CRspNpcTownStatus
{
	// 联盟战功信息
	message AllianeMeritInfo
	{
		optional GUID alliance_id = 1;  //联盟ID
		optional int64 merit = 2;  //联盟战功
	} 
	repeated AllianeMeritInfo alliance_merit_list = 1;
	optional int64 player_merit = 2;  //个人战功
	optional int64 kill_npc = 3;  //击杀守军
	optional int64 wall_break = 4;  //拆除耐久度
	optional int64 config_id = 5;  //城镇配置ID
}

// MSG_C2S_REQ_NPC_TOWN_LAST_RANK                   = 3389; // 获取最近一次战功排名 消息体EmptyMsg
// MSG_S2C_RSP_NPC_TOWN_LAST_RANK                   = 3390; // 返回最近一次战功排名
message S2CRspNpcTownLastRank
{
	repeated NpcTownMeritRankInfo rank_list = 1;  //排名列表
}

// MSG_SS2AS_NPC_TOWN_MERIT_RANK                    = 3391; // 通知AS记录城镇战功排名
message SS2ASNpcTownMeritRank
{
	repeated NpcTownMeritRankInfo rank_list = 1;  //排名列表
	optional int64 config_id = 2;  //城镇ID
	optional int32 status = 3;  //状态 1:成功 2:失败 3:超时
	optional int64 land_color = 4;  //土地颜色
}

// MSG_S2C_NTF_NPC_TOWN_OCCUPY_SUCCESS              = 3392; // 本盟在线广播占领成功
message S2CNtfNpcTownOccupySuccess
{
	optional int64 config_id = 1;  //城镇ID	
	optional string alliance_tag = 2;// 本联盟tag	
	optional string alliance_name = 3;// 本联盟名字	
	optional string last_alliance_tag = 4;// 被占联盟tag	
	optional string last_alliance_name = 5;// 被占联盟名字
}

// 战功排行榜信息
message NpcTownMeritRankInfo
{
	optional GUID player_id = 1; // 玩家ID
	optional int64 merit = 2; // 战功

	optional string avatar_url = 3; // 头像
	optional int64 avatar_box = 4; // 头像框
	optional string player_name = 5; // 玩家名字

	optional int64 kill_npc_merit = 6; // 击杀npc守军战功
	optional int64 wall_break_merit = 7; // 拆除耐久度战功
}

//MSG_C2S_REQ_GET_NPC_TOWN_HISTORY = 3375
message C2SReqGetNpcTownHistory
{
	optional int64 config_id = 1;  //城镇ID
	optional int32 page = 2; //分页，单次返回10条
}

message NpcTownHistoryInfo
{
	optional int64 index = 1;
	optional int64 time = 2;
	optional string alliance_name = 3;
	optional string alliance_tag = 4;
	optional string leader_name = 5;
	optional AllianceSymbol alliance_symbol = 6;
	optional int64 avatar_id = 7;
	optional int64 avatar_box = 8;
	optional string avatar_url = 9;
}

//MSG_S2C_RSP_GET_NPC_TOWN_HISTORY = 3376
message S2CRspGetNpcTownHistory
{
	optional int64 config_id = 1;  //城镇ID
	optional int32 page = 2;
	repeated NpcTownHistoryInfo infos = 3;
}

message NpcTownEnrollInitInfo
{
	optional GUID alliance_id = 1; //如果是subtype=6，代表有资格报名的帮会
	repeated int64 config_ids = 2; //已报名的城镇ID
	optional int64 max_enroll_times = 3; //最大报名次数
	repeated int64 battle_start_time = 4;  //战斗开始时间
}

//MSG_SS2AS_REQ_INIT_NPC_TOWN_ENROLL_TIMES = 3377
message SS2ASReqInitNpcTownEnrollTimes
{
	optional int32 sub_type = 1;
	repeated NpcTownEnrollInitInfo init_list = 2;
	optional int64 enroll_step_end_time = 3;
	optional int64 remind_mail_id = 4;
}

message NpcTownStepInfo
{
	optional int64 config_id = 1;
	optional int32 step = 2;
	optional int64 step_start_time = 3;
	optional int64 step_end_time = 4;
	repeated GUID enroll_alliance_ids = 5;
	optional GUID alliance_id = 6;
	optional int64 occupy_start_time = 7;
	optional int64 occupy_end_time = 8;
	optional int32 city_buff_state = 9;
	optional int64 battle_start_time = 10;
	optional int64 battle_end_time = 11;
	optional int64 abandon_time = 12; // 放弃的结束时间
	optional int64 wall = 13; // 城墙耐久
}

//MSG_S2C_NTF_NPC_TOWN_STEP = 3378
//MSG_S2C_NTF_NPC_TOWN_ALLIANCE = 3379
//MSG_S2C_RSP_GET_LINKED_SMALL_NPC_TOWN = 3381
message S2CNtfNpcTownStep
{
	repeated NpcTownStepInfo infos = 1;
	optional int32 area_id	   = 2;
}

//MSG_C2S_REQ_GET_LINKED_SMALL_NPC_TOWN = 3380
message C2SReqGetLinkedSmallNpcTown
{
}

//MSG_C2S_REQ_GET_NPC_TOWN_ALL_ALLI_OCC_TIME = 3382
message C2SReqGetNpcTownAllAlliOccTime
{
	optional int64 config_id = 1;
}

//MSG_S2C_RSP_GET_NPC_TOWN_ALL_ALLI_OCC_TIME = 3383
message S2CRspGetNpcTownAllAlliOccTime
{
	optional int64 config_id = 1;
	repeated GUID alliance_ids = 2;
	repeated int64 total_occ_time = 3;
}

//MSG_C2S_REQ_GET_NPC_TOWN_RANK = 3384
message C2SReqGetNpcTownRank  //请求排行榜信息
{
	optional bool detail = 1;
}

//MSG_S2C_RSP_GET_NPC_TOWN_RANK = 3385
message S2CRspGetNpcTownRank  //请求排行榜信息
{
	optional int64 self_rank = 1;
	repeated SingleRankData rank_data_list 	= 2;   //排行榜信息
}


//MSG_AS2SS_RPC_ENROLL_NPC_TOWN = 50046
message AS2SSRpcEnrollNpcTown
{
	optional int64 result            = 1;  //返回结果
	optional GUID player_id 		 = 2;  //玩家ID
	optional GUID alliance_id 		 = 3;  //帮会ID
	optional int64 config_id 		 = 4;  //城镇ID
	optional bool is_cancel 		 = 5;  //是否取消报名
	optional int64 battle_start_time = 6;  //战斗开始时间
	optional int64 schedule_title 	 = 7;  //多语言翻译
	optional GUID occupy_alliance_id = 8;  //当前占领的帮会
}

// MSG_AS2SS_RPC_ABANDON_NPC_TOWN               = 50053;  //放弃NPC城镇
message AS2SSRpcAbandonNpcTown
{
	optional int64 result            = 1;  //返回结果
	optional GUID player_id 		 = 2;  //玩家ID
	optional GUID alliance_id 		 = 3;  //帮会ID
	optional int64 config_id 		 = 4;  //城镇ID
	optional bool is_cancel 		 = 5;  //是否取消弃城
}

// MSG_AS2SS_RPC_NPC_TOWN_RANK                  = 50054;  //请求NPC城镇战功排名
message AS2SSRpcNpcTownRank
{
	optional S2CRspNpcTownLastRank rank_data = 1;  //排行榜信息
	optional int64 config_id = 2;  //城镇ID
	optional GUID alliance_id = 3;  //帮会ID
}

// MSG_AS2SS_RPC_BE_DECLARE_WAR                 = 50056;  //获取 被宣战 信息
message AS2SSRpcBeDeclareWar
{
	optional GUID player_id = 1;  //玩家ID
	optional GUID alliance_id = 2;  //帮会ID
	optional int32 count = 3;  //被宣战数量
}

//MSG_GS2SS_RPC_CHECK_QUIT_ALLIANCE = 50047
message GS2SSRpcCheckQuitAlliance
{
	optional int64 result = 1; //返回结果
	optional GUID alliance_id = 2;  //帮会ID
}

//MSG_C2S_APPOINT_KING = 3401;  // 任命国王
message C2SAppointKing
{
	optional GUID xTargetPlayerID = 1;// 被任命的玩家ID	
	optional bool bAppoint = 2;// 是否任命 true 任命， false取消任命
	optional GUID xTargetCityID = 3;// 被任命的玩家ID	
}


//MSG_SS2GS_RPC_APPOINT_KING           		= 50123;// s2g 国王/官员 任命
//MSG_GS2SS_RPC_APPOINT_OFFICIAL           	= 50124;// g2s 官员 任命
//MSG_GS2SS_RPC_END_APPOINT_KING           	= 50126;// AS-SS 官员 任命
message SS2GSRPCAppointKing
{	
	optional bool bAppoint = 1;   	// 是否任命 true 任命， false取消任命
	optional int64 nOfficial = 2; 	// 官员ID
	optional int32 result = 3;
	optional GUID xTargetCityID = 4;// 被任命的玩家cityID	
	optional GUID xKingCityID = 5;// 被任命的玩家cityID	
}

//MSG_C2S_APPOINT_OFFICIAL = 3402;  // 任命王都职位
message C2SAppointOfficial
{
	optional GUID xTargetPlayerID = 1;// 被任命的玩家ID	
	optional GUID xTargetCityID = 2;// 被任命的玩家cityID	
	optional int64 nOfficial = 3;// 官员ID
	optional bool bAppoint = 4;// 是否任命 true 任命， false取消任命
}

// MSG_SS2AS_RPC_APPOINT_TIMEEND = 50125; // S->AS 通知 时间到了自动任命群主为国王
message SS2ASRPCAppointTimeEnd
{	
	optional int32 result = 1;
	optional int64 nOfficial = 2;// 官员ID
	optional GUID xTargetCityID = 3;// 被任命的玩家cityID	
	optional GUID xAllianceID = 4;// 被任命的玩家cityID	
}

// MSG_SS2GS_OFFICIAL_CANCEL = 3403; // SS-GS 取消全部 官员 任命
message SS2GSOfficialCancel
{	
	optional int32 result = 1;
	repeated GUID listTargetCityID = 2;// 被取消任命的玩家cityID	
}

// MSG_SS2GS_OFFICIAL_RELOAD = 3413; // SS-GS 官员 RELOAD 操作
message SS2GSOfficialReload
{	
	optional bool addProperty = 1;
	optional int64 nOfficial = 2;
}

//	MSG_C2S_REQ_GET_PATH						= 2412;	//请求服务器大地图寻路路径
message ReqGetPath
{
	optional Point2D start_pos				 = 1;	//寻路起点
	optional GUID target_guid				 = 2;	//寻路目标guid 如果寻路有目标的话 需要传这个guid 涉及到寻路终点修正
	optional Point2D end_pos				 = 3;	//寻路终点 如果有 target_guid 这个值可以不传
	optional int64 req_id					 = 4;	//

}
//	MSG_S2C_RSP_GET_PATH						= 2413;	//请求服务器大地图寻路路径应答
message RspGetPath
{
	enum EFindPathResult
	{
		FPR_SUCCESS						 = 1;	//寻路成功
		FPR_UNKNOW_ERROR				 = 2;	//未知错误
		FPR_TARGET_POS_ERROR			 = 3;	//目标位置不可达
	}
	optional int32 result						 = 1;	//寻路结果 EFindPathResult
	repeated Point2D path_nodes					 = 2;	//路径 不包含起点
	optional int64 req_id						 = 3;	//
}

// MSG_S2C_RSP_ALLIANCE_RES_INFO                   = 2532;       // 回复联盟资源点信息
// i_t[B_t, i_t],i_t 数据
// 4字节数量[1字节类型, 4字节坐标],4字节小区ID

// MSG_S2C_RSP_ALLIANCE_RES_MD5                    = 2534;       // 回复联盟资源点md5
message S2CRspAllianceResMd5
{
	optional string md5 = 1;
	optional int32 area_id = 2;// 小区id
}

// MSG_SS2DB_RPC_UPDATE_SCENE_CELL_INFO            = 50200;// S->DB 更新场景单位格子信息
message SS2DBRPCUpdateSceneCellInfo
{
	optional int32 result = 1;	
	optional int32 cell_index = 2;
}
//	MSG_C2S_REQ_CITY_GARRISON_INFO	                                 = 2722;// 目标city 援助信息请求
message ReqGarrisonInfo
{
	optional GUID target_player						 = 1;	//目标玩家guid 主城
	optional GUID target_BuildID    				 = 2;	//目标玩家guid 建筑ID 主城不能走这个逻辑，要扣除城内的部队。
}

//	MSG_C2S_RSP_CITY_GARRISON_INFO	                                 = 2723;// 目标city 援助信息回复
message RspGarrisonInfo
{
	optional bool garrison_open						 = 1;	//援助功能是否开启
	optional int64 max_garrison_soldier				 = 2;	//最大驻守兵力上限
	optional int64 cur_soldier						 = 3;	//当前已有援助士兵数量
	optional GUID building_id							 = 4;	//
	optional int32 max_garrison_sg_num				 = 5;	//驻守部队数量上限
	optional int32 garrison_sg_num					 = 6;	//当前驻守部队数量
	optional AssembleInfo garrison_info			     = 7;	//驻守部队信息
}
enum ECitySimpleFunc
{
	CSF_CityGarrison					 = 0;	//城市援助
	CSF_EnterDungeonServer				 = 1;	//进入过副本服
	CSF_23StoryVersion					 = 2;	//2023-12-27 SG-14933 前期流程修改标记
	CSF_OldSubscribeMail				 = 3;	//老订阅玩家邮件 有标记的登录时发邮件提醒订阅修改
	CSF_FurniturePatch					 = 4;	//家具补充
	CSF_ChaptertaskVersion				 = 5;	//版本兼容，版本增加第一个采集的油，不想记录章节任务。
	CSF_M9D1VersionRepair				 = 6;	//m9-1版本数据兼容
	CSF_M9VersionRepair					 = 7;	//m9版本数据兼容
}

message AutoAssembleSetData
{
	optional int32 set_type						 = 1;	//0 关闭，1 开启
	optional int32 sg_type						 = 2;	//加入部队类型，1 全军加入，2 预设编队加入
	optional MOSoldierGroup pre_set_sg			 = 3;	//预设编队数据 
	repeated int32 monster_types				 = 4;	//自动加入集结目标类型	
}
//	MSG_RPC_REQ_SET_AUTO_ASSEMBLE					= 50134;	//
//	MSG_C2S_REQ_SET_AUTO_ASSEMBLE										 = 2773;	//设置自动集结
//message ReqSetAutoAssemble
//{
//	optional AutoAssembleSetData set_data						 = 1;	//
//	optional GUID city_id										 = 2;	//服务器使用
//	optional int32 result										 = 3;	//服务器使用
//	optional int64 finish_time									 = 4;	//结束时间 服务器使用
//	optional int32 queue_order									 = 5; 	//排队次序 服务器使用
//}
//	MSG_S2C_RSP_SET_AUTO_ASSEMBLE										 = 2774;	//设置自动集结
//message RspSetAutoAssemble
//{
//	enum ESetResult
//	{
//		SR_Success				 = 0;	//成功
//		SR_DataError			 = 1;	//数据错误
//		SR_WoundedLimit			 = 2;	//伤兵超出上限
//	}
//	optional int32 error_code					 = 1;	// ESetResult
//	optional int32 queue_order					 = 2; 	//排队次序
//}
//	MSG_C2S_REQ_AUTO_ASSEMBLE_INFO										 = 2775;	//请求自动集结信息	打开页面请求
//message ReqAutoAssembleInfo
//{
//	
//}
//	MSG_S2C_RSP_AUTO_ASSEMBLE_INFO										 = 2776;	//请求自动集结信息
//message RspAutoAssembleInfo
//{
//	optional AutoAssembleSetData set_data						 = 1;	//
//	optional int32 queue_order									 = 2; 	//排队次序
//}

//	MSG_RPC_REQ_DO_AUTO_ASSEMBLE					= 50135;	//场景服通知game 开始自动加入集结
message ReqDoAutoAssemble
{
	enum EDAAError
	{
		DAAE_Success				 = 0;
		DAAE_DataError				 = 1;
		DAAE_WoundedLimit			 = 2;
		DAAE_MarchingError			 = 3;
	}
	optional int32 result							 = 1;	//EDAAError
	optional GUID city_id							 = 2;	//参加集结的cityID
	optional GUID assemble_id						 = 3;	//集结ID 
	optional GUID alliance_id						 = 4;	//集结的联盟id
	optional GUID assemble_city						 = 5;	//集结的城市ID
	repeated KVP kv_list								 = 6;	//可用士兵列表信息
	repeated int64 marching_heros						 = 7;	//行军中的英雄
	optional int32 sgindex_bitmap							 = 8;	//行军队列index 位图
}

//	MSG_S2G_NTF_ASSEMBLE_COMPLETE										 = 2777;	//场景通知game 集结完成
message NtfAssembleComplete
{
	repeated GUID citys				 = 1;
}

//---------------------------------Dungeon base-------------------------------------//

message DungeonKillInfo  //副本击杀数据
{
	optional int64 kill_count = 1;  //击杀数量
	optional int64 cure_count = 2;  //治疗数量
	optional int64 soldier_left_count = 3;  //士兵剩余数量
}

message DungeonSoldierGroup
{
	optional int32 pos_index = 1;  //位置
	optional MOSoldierGroup soldiers = 2;  //士兵组
	optional DungeonKillInfo kill_info = 4;  //击杀数据
}

message DungeonSoldiers
{
	repeated DungeonSoldierGroup dungeon_soldier_group_list = 1;   //副本玩家所有部队
	optional S2CNtfGeneralProperty gen_property = 2;  //属性
}


message DungeonBattleReportInfo
{
	message BattleBasicInfo
	{
		optional GUID player_id					 = 1;	
		optional string player_name				 = 2;
		optional string alliance_tag			 = 3;
		optional string avatar_url               = 4; 
		optional int64 avatar_box 				 = 5;  //头像框
		optional int64 power 					 = 6; //战力 
		optional S2CNTFMapObjectCreate soldiers  = 7;  
		optional bool is_robot					 = 8;  //是否是机器人
		optional int64 robot_id                  = 9; //机器人ID
		optional string alliance_name            = 10; //联盟名称
	}

	message BattleRoundInfo  //战斗回合信息
	{
		message ProcessData  //战斗过程数据
		{
			optional int32 msg_id 		 = 1;  //消息ID
			optional bytes process_data = 2;  //数据
		}
		repeated ProcessData process_data_list = 1;
	}

	optional GUID report_id 					= 1;  //战报ID
	optional BattleBasicInfo attack_Info   		= 2;  //攻击方 
	optional BattleBasicInfo defense_info 		= 3;  //防守方
	repeated BattleRoundInfo round_info_list 	= 4;  //回合信息列表
}


message PresetHero
{
	optional int64 hero_id			 = 1;
	optional int32 hero_type		 = 2;
}
message PresetSG
{
	repeated PresetHero heros		= 1;
	optional int32 index			= 2;
}
message PresetSGInfo
{
	repeated PresetSG soldier_groups		= 1;
}

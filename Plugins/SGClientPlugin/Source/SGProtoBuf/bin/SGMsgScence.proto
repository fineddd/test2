syntax = "proto2";

package SGMsg;
import "SGMsgBase.proto";
import "SGMsgDB.proto";
import "SGMsgEntity.proto";
//---------------------------demo相关begin------------------------------
message ScenceBaseInfo
{
	required int64 Scene_Id		= 1;//场景id
    required int32 Width		= 2;//对应X宽度
    required int32 Height		= 3;//对应Y宽度
    required int32 Grid_Width	= 4;//X格子宽度
	required int32 Grid_Height	= 5;//Y格子宽度
	required int32 Server_Count	= 6;//在几个进程上跑。
}

message ZoneCofigInfo
{
	required int64 Scene_Id		= 1;//场景id
	required int32 Scene_Width	= 2;//场景宽度
	required int32 Scene_Height	= 3;//场景宽度
	required GUID  Zone_id		= 4;//区块id
	required int32 Start_Width	= 5;//对应X宽度
	required int32 Start_Height	= 6;//对应Y宽度
	required int32 Zone_Width	= 7;//对应X宽度
	required int32 Zone_Height	= 8;//对应Y宽度
	required int32 Grid_Width	= 9;//正常视角层（第三层）X格子宽度
	required int32 Grid_Height	= 10;//正常视角层（第三层）Y格子宽度（第二层格子宽度是第三层的两倍，5*5一个格子）
	required int32 Server_ID		= 11;//多进程的话记录进程id
}

message ScenceInfo
{
	required ScenceBaseInfo Scene_baseinfo	= 1;//场景信息
    repeated ZoneCofigInfo xZoneinfo		= 2;//场景区块信息
}

//	MSG_S2S_SYNC_SCENCE_ZONE        			= 322; //地图区块信息信息
message S2S_SYNC_SCENCE_ZONE
{
	repeated ScenceInfo scence_list			 = 1;
}

//MSG_CS2S_OBSERVER_SCENCE_ZONE				= 271; //请求观察跨服区块
message ObserverScenceZone
{
	optional GUID playerid					= 1;
	optional int32 nTargetAreaID			= 2;//场景信息
	optional int32 nTargetscenceid			= 3;//场景id
    optional Point2D xTargetPos				= 4;//场景位置信息
	optional int32 nFromAreaID				= 5;//区ID
	optional int32 nFromServerID			= 6;//区GameserverID
	optional int32 nLayer					= 7;//看第几层信息
}
//---------------------------demo相关end------------------------------
enum EEnterScenceActionType
{
	ESAT_Login			 = 1;	//登录
	ESAT_Dungeon		 = 2;	//副本切换
	ESAT_WorldSwitch	 = 3;	//跨服迁移等 场景服切换
}
//	MSG_S2C_NTF_ENTER_SCENCE											 = 2801;	//通知客户端进入场景
message NTFEnterScence
{
	required int64 scence_id							 = 1;	//map 表 配置id
	optional int32 aciton_type							 = 2;	//EEnterScenceActionType
}


//MSG_RPC_S2S_CITY_DATA_SWITCH_SCENE                     = 50021;  //切换场景 (服务器驱动)
message S2SCityDataSwitchSceneRpc  //切换场景
{
	//enum EDataSwitchType
	//{
	//	DST_Error				 = 1;
	//	DST_SwitchFinish		 = 2;	//同服切换，直接切换完成 	//目前功能没做
	//	DST_SwitchServer		 = 3;	//切换服务器
	//}
	
	optional GUID city_id                	= 1;  //城市ID
	optional ScenceEntityData city_data 	= 2;  //城市数据
	//optional int64 target_scence			= 3;	//目标场景id
	//optional int64 target_group				= 4;	//目标场景分线id，如果 = 0，自动分配
	//optional EDataSwitchType data_type		= 5;
	//optional Point3D pos                    = 6;  //场景切换后的坐标
	//optional int64 scene_group_id           = 7;  //场景组ID
	optional int64 cross_finish_time        = 8;  //跨服迁移结束时间
	optional int32 target_area		        = 9;  //跨服迁移目标area id
	optional int32 source_type		        = 10;  //发起跨服的玩法类型
	optional int64 source_id		        = 11;  //发起跨服的玩法id
	optional int32 result					= 12;
	optional int32 self_area				= 13;
	optional Point2D target_pos				= 14;	//跨服后目标位置
	optional bool fource_switch				= 15;	//是否强制跨服
	
}

//MSG_RPC_S2S_RECYCLE_CITY                    = 50014;   //回收city
message S2SRecycleCityRpc
{
	optional GUID city_id                	= 1;  //城市ID
}

//	MSG_S2S_REQ_PLAYER_CITY_DATA										 = 2802;	//请求玩家city相关数据广播
message S2SReqPlayerCityData
{
	required GUID city_id					 = 1;
	optional GUID config_client_id 			 = 2;
	optional string account 				 = 3;
	optional int32 login_dungeon			 = 4;	//0 普通请求数据, 1 登录进入副本，只请求city数据并且不打开数据同步
	optional int32 area						 = 5;
}


//	MSG_C2S_REQ_KING_USE_SKILL										 = 3404;	// 国王请求使用技能
message C2SReqKingUseSkill
{
	optional int64 skill_id 				 = 1;
	optional GUID target_id					 = 2;
}

// MSG_RPC_GS2SS_KING_USE_SKILL                       = 50129;//  GS-SS 国王使用技能
message RpcGS2SSKingUseSkill
{
	optional int64 skill_id 				 = 1;
	optional GUID target_id					 = 2;// 对方CITYID
	optional int32 result 				 	 = 3;
	optional GUID king_id					 = 4;// 国王cityID
	optional Point2D pos					 = 5;// 获取坐标
}

//	MSG_SS2GS_BE_KING_USE_SKILL										 = 3405;	// 国王请求使用技能 buff 才会发
message SS2GSBeKingUseSkillBuff
{
	repeated int64 skill_id 				 = 1;
	optional int32 opt 				 	 	 = 2;	//  0：启服/断开 全同步1: 添加 2 删除
	optional GUID npctown_id				 = 3;// 首都id
}

//	MSG_C2S_REQ_KING_ALLOCATE_REWARD										 = 3407;	// 国王请求使用技能
message C2SReqKingAllocateReward
{
	optional int64 reward_id 				 = 1;
	repeated GUID target_id					 = 2;// 对方PlayerID
}

// MSG_RPC_GS2SS_KING_ALLOCATE_REWARD                       = 50130;//  GS-SS 国王分配奖励
//	MSG_SS2GS_BE_KING_ALLOCATE_REWARD										 = 3408;	// 被国王分配奖励
message RpcGS2SSReqKingAllocateReward
{
	optional int64 reward_id 				 = 1;
	repeated GUID target_city_id			 = 2;// 对方CityID
	optional int32 result 				 	 = 3;
	optional GUID king_city_id			 	 = 4;// 国王CityID
}

message NpcTownOfficialInfo
{
	optional string king_name = 1;
	optional string alliance_tag = 2;
	optional int64 avatar_id = 3;
	optional int64 avatar_box = 4;
	optional int64 nOfficial = 5;
	optional string avatar_url = 6;
	optional GUID city_id = 7;
	optional string alliance_name = 8;
}

// MSG_C2S_REQ_NPCTOWN_OFFICIAL_INFO                = 3409;// 请求npc城镇信息
// MSG_S2C_RSP_NPCTOWN_OFFICIAL_INFO                = 3410;// 回复npc城镇信息
message C2SReqNpcTownOfficialInfo
{	
	repeated NpcTownOfficialInfo listInfo			 = 1;// 官员信息
	optional int64 area_id							 = 2;
}

//	MSG_S2C_RSP_KING_USE_SKILL										 = 3411;	// 国王使用技能返回
message S2CRspKingUseSkill
{
	optional int64 skill_id 				 = 1;
	optional GUID target_id					 = 2;
	optional Point2D pos 					 = 3;
}

//	MSG_S2C_NTF_KING_BUFF										 = 3412;	// 国王Buff同步
message S2CNtfKingBuffInfo
{
	repeated KingBuffInfo buff_list 				 = 1;
}

message KingBuffInfo
{
	optional int64 skill_id 				 = 1;
	optional int64 end_time 				 = 2;
}

//MSG_C2S_REQ_GET_KING_HISTORY = 3414
message C2SReqGetKingHistory
{
}

message KingHistoryInfo
{
	optional int64 time = 1;
	optional string alliance_name = 2;
	optional string alliance_tag = 3;
	optional AllianceSymbol alliance_symbol = 4;
	optional string king_name = 5;	
	optional string avatar_url = 6;
	optional int64 avatar_box = 7;
}

//MSG_S2C_RSP_GET_KING_HISTORY = 3415
message S2CRspGetKingHistory
{
	repeated KingHistoryInfo infos = 3;
}
enum ESetViewType
{
	SVT_ServerView				 = 0;
	SVT_DungeonView				 = 1;

}
//	MSG_C2S_REQ_SET_VIEW_SERVER			 = 3701;	//设置观察服务器请求
//	MSG_C2S_REQ_SET_VIEW_DUNGEON										 = 2836;	//设置副本观察点
message ReqSetViewServer
{
	optional int64 area_id				 = 1;		//目标area id，
	optional int32 view_type			 = 2;	//类型 0 大地图，1 副本 ESetViewType
	optional int32 set_type				 = 3;	//客户端上传类型
}
enum ESetViewResult
{
	SVR_SUCCESS					 = 0;
	SVR_DATA_ERROR				 = 1;
	SVR_VIEW_SAME_SERVER		 = 2;	//重复设置相同server
	SVR_UNCOMPLETE_REQ			 = 3;	//还在处理之前的切换请求
	SVR_MISS_TARGET_SERVER		 = 4;	//无法连接至目标服
}
//	MSG_C2S_RSP_SET_VIEW_SERVER			 = 3702;	//设置观察服务器返回
//	MSG_S2C_RSP_SET_VIEW_DUNGEON										 = 2837;	//设置副本观察点
message RspSetViewServer
{
	optional int32 result					 = 1;	//0 成功， 其他失败 ESetViewResult
	optional int64 scence_id				 = 2;
	optional int32 view_type				 = 3;	//类型 0 大地图，1 副本 ESetViewType
	optional Point2D pos					 = 4;	//
	optional BattleRoyaleInfo battle_royale_info = 5;  //大逃杀副本信息
	optional int32 set_type				     = 6;	//客户端上传类型
	optional int32 area_id				     = 7;	//
}
//	MSG_RPC_SET_VIEW_SERVER							= 50201;//设置跨服观察者请求
message RpcSetViewObserver
{
	optional int32 result						 = 1;
	optional int64 source_game_server_id		 = 2;
	optional int64 scence_server_id				 = 3;
	optional GUID player_id						 = 4;
	optional int32 detail_battle_msg			 = 5;
	optional int64 scence_id					 = 6;	//场景id
	optional int64 dungeon_param				 = 7;
	optional int32 dungeon_type					 = 8;
	optional int64 source_gate_server_id		 = 9;
	optional Point2D pos						 = 10;
	optional BattleRoyaleInfo battle_royale_info = 11;  //大逃杀副本信息
}
//	MSG_RPC_OBSERVER_LEAVE_SCENE					= 50202;
//	MSG_S2S_REQ_OBSERVER_LEAVE_SCENE	 = 3703;	//观察者移出场景，跨服删除，本服移出
message ReqObserverLeaveScene
{
	optional GUID player_id						 = 1;
}


// 当前生效中技能列表
message InEffectKingSkillInfo
{
	optional int64 SkillID						 = 1;
	optional GUID  CityID					 	 = 2;
	optional int64 StartTime					 = 3;
	optional int64 EndTime						 = 4;
}

// 技能使用次数
message KingSkillUseCountInfo
{
	optional int64 SkillID						 = 1;
	optional int64 UseCount					 = 2;
}

//国王使用技能历史记录
message HistoryKingSkillInfo
{
	optional int64  Time						 	= 1;
	optional int64  SkillID					 	 	= 2;
	optional string AllianceTag					 	= 3;
	optional string PlayerName						= 4;
}

//战利品分配历史记录列表
message HistoryKingRewardInfo
{
	optional int64 Time						 			= 1;
	optional int64 WarRewardID					 	 	= 2;
	optional string AllianceTag					 		= 3;
	optional string PlayerName							= 4;
	optional GUID PlayerID								= 5;
}

//分配次数列表
message RewardAllocateCountInfo
{
	optional int64 WarRewardID					 	 	= 1;
	optional int64 Count					 			= 2;
}


//MSG_C2S_GET_KING_OPERATE_INFO = 3416
message C2SGetKingOperateInfo
{
	optional int64 OperateType					 			= 1; // 1:使用技能数据 2 战利品数据
}


//MSG_S2C_RSP_KING_OPERATE_INFO = 3417
message S2CGetKingOperateInfo
{
	repeated InEffectKingSkillInfo EffectSkills	 			= 1;// 当前生效中技能列表

	repeated KingSkillUseCountInfo SkillUseCounts	 		= 2;// 技能使用次数

	repeated HistoryKingSkillInfo HistorySkills	 			= 3;//国王使用技能历史记录

	repeated HistoryKingRewardInfo HistoryRewards 			= 4;//战利品分配历史记录列表

	repeated RewardAllocateCountInfo RewardCounts 			= 5;//分配次数列表

	optional int64 OperateType					 			= 6;// 1:使用技能数据 2 战利品数据
}
	//	MSG_S2S_CROSSSERVER_VIEW_MSG		 = 3704;	//跨服视野消息转发
message CrossServerViewMsg
{
	optional int32 msg_id				 = 1;
	optional int32 area_id				 = 2;
	optional bytes msg_data				 = 3;
}
//	MSG_S2S_CROSSSERVER_VIEW_HEARTBEAT	 = 3705;	//跨服视野心跳
message CrossServerViewHeartbeat
{
	
}

//	MSG_C2S_REQ_PLAYER_MIGRATE		 = 3706;	//移民请求
message C2SReqPlayerMigrate
{
	optional int32 migrate_type					 = 1; //迁服类型
	optional int32 target_area_id				 = 2;
}
//	MSG_S2S_NTF_MIGRATE_FINISH					 = 3707;	//老服移民结束
message NTFMigrateFinish
{
	optional GUID player_id							 = 1;
}
//	MSG_GS2SS_RPC_MIGRATE_CHECK                   = 50083;//玩家移民条件检查
//	MSG_GS2SS_RPC_TARGET_MIGRATE_CHECK            = 50088;//玩家移民条件检查
//	MSG_GS2LS_RPC_TARGET_MIGRATE_CHECK            = 50089;//玩家移民条件检查
message S2SRpcMigrateCheck
{
	optional int32 result						 = 1;	//EMigCheckResultType
	optional int64 msg_id						 = 2;
	optional GUID player_id						 = 3;
	optional int64 migrate_type					 = 4; //移民类型
	optional string account						 = 5;
	optional int64 power				 		 = 6;
	optional int64 power_rank				 	 = 7;
}
//	MSG_GS2SS_RPC_DEAL_MIGRATE_DATA		 		= 50090;	//移民数据处理
//	MSG_GS2LS_RPC_DEAL_MIGRATE_DATA             = 50091;	//移民数据处理
//	MSG_GS2LS_RPC_DEAL_TARGET_MIGRATE_DATA      = 50092;	//目标服创建移民数据
//	MSG_GS2PS_RPC_DEAL_MIGRATE_DATA             = 50093;	//强制保存PSPlayer信息
//	MSG_GS2MS_RPC_DEAL_MIGRATE_DATA             = 50094;	//强制保存MailDB信息
message S2SRpcDealMigrateData
{
	optional int64 result 						 = 1;
	optional int64 msg_id						 = 2;
	optional GUID player_id						 = 3;	
	optional int32 target_area_id				 = 4;
	optional int64 source_area_id				 = 5;
	optional string account						 = 6;
	optional string player_name					 = 7;
	optional int64 language						 = 8;	
	optional ScenceEntityData player_data		 = 9;
	optional ScenceEntityData game_city			 = 10;
	optional ScenceEntityData scene_city		 = 11;
	optional EntityDB mail						 = 12;
}

//	MSG_C2S_REQ_ALL_SERVER_LIST		     	 = 3708;	//服务器列表
message C2SReqAllServerList
{
	optional int64 migrate_type				 	 = 1;
}

message ShowServerInfo
{
	optional int32 area_id				 		 = 1;
	optional bool can_migrate				 	 = 2;
	optional int64 server_open_time				 = 3; //服务器用参数
}

//	MSG_S2C_RSP_ALL_SERVER_LIST          	 = 3709;    //服务器列表	返回
message S2CRspAllServerList
{
	repeated ShowServerInfo server_list       = 1;	
}

//	MSG_S2S_RPC_ALL_SERVER_LIST          	 = 50086;    //移民服务器列表
message S2SRpcAllServerList
{
	optional int32 result 						 = 1;
	optional int32 big_area 					 = 2;
	repeated ShowServerInfo server_list       	 = 3;	
}

//	MSG_C2S_REQ_TARGET_SERVER_MIGRATE_DETAIL		  = 3710;	//移民目标服务器信息
message C2SReqTargetServerMigrateDetail
{
	optional int32 target_area_id				 = 1;
}

//	MSG_S2C_RSP_TARGET_SERVER_MIGRATE_DETAIL          = 3711;    //移民目标服务器信息	返回
message S2CRspTargetServerMigrateDetail
{
	optional int32 target_area_id				 = 1;
	optional int64 server_open_time				 = 2;
	optional int64 power_rank				 	 = 3;
}

//	MSG_S2S_RPC_TARGET_SERVER_MIGRATE_DETAIL		 = 50087;	//移民服相关数据
message S2SRpcTargetServerMigrateDetail
{
	optional int64 result				 		 = 1;
	optional int64 server_open_time				 = 2;
	optional int64 power				 		 = 3;
	optional int64 power_rank				 	 = 4;
}
// MSG_S2C_NTF_DUNGEON_CIRCLE                                           = 2840;    //毒圈通知
message CircleInfo
{
	optional Point2D center		= 1;	//毒圈初始圆心
	optional int32 radius		= 2;	//毒圈初始半径	
	optional int64 start_time	= 3;	//缩圈开始时间
	optional int64 end_time		= 4;	//缩圈结束时间

	optional Point2D safe_center	= 5;	// 安全区圆心	
	optional int32 safe_radius	= 6;	// 安全区半径
}

// 宝物部队
message TreasureSGInfo
{
	// 部队名字
	optional string sg_name				 = 7;
	// 联盟tag
	optional string alliance_tag			 = 8;
	// 当前部队最高实力
	optional int64 sg_power				 = 9;
}

message BrObjectInfo
{
	enum FieldIndex
	{
		field_object_id = 1;
		field_object_type = 2;
		field_cur_pos = 4;
		field_config_id = 5;
		field_create_type = 6;
		field_sg_info = 7;
		field_create_time = 8;
	}
	enum CreateType
	{
		CT_Default = 0;
		CT_Treasure = 1;
	}
	optional GUID object_id					 = 1;
	optional int32 object_type				 = 2;	//ObjectType
	optional Point2D cur_pos				 = 4;	//
	optional int64 config_id				 = 5;	//会有对应的配置ID	
	optional int32 create_type				 = 6;	// 0:默认创建 1:宝物掉落
	optional TreasureSGInfo sg_info 		 = 7; // 部队信息	
	optional int64 create_time				 = 8; // 创建时间戳(仅用于空投)
}

// MSG_NTF_BR_REFRESH_OBJECT      = 2893;// 地图通知刷新单位
message NTFBrRefreshObject
{
	enum RefreshNotify
	{
		PACK	 	= 0; // 全量包
		ADD 		= 1; // 增
		DEL 		= 2; // 删
		UPDATE 		= 3; // 改
	}

	message RefreshDTO
	{
		optional int32 notify_type	 = 1;	// RefreshNotify 通知类型
		optional BrObjectInfo object_info	 = 2;	// 单位信息
		optional int32 fieldIndex = 3; // 仅用于 notify_type = UPDATE(3), 更新BrObjectInfo中字段pb索引位置
	}	
	repeated RefreshDTO object_list		 = 1;	//刷新的单位列表
}

message BattleRoyaleInfo
{
	optional int64 start_time = 1;  //开始时间
	optional CircleInfo circle_info = 2;  //毒圈信息
	optional int64 player_count = 3;  //玩家人数
	optional int64 item_count = 4; //物品数量
	optional int64 common_score = 5;  //公共积分
	optional int32 max_player_count = 6; //最大匹配人数
	optional int64 kill_score = 7;  //击杀积分
	optional NTFBrRefreshObject refresh_object_info = 8;  //小地图对象信息
	optional int64 match_id = 9;  //匹配ID
}

//	MSG_S2G_NTF_CROSS_CITY_BACK											 = 2804;	//跨服city 返回原服	//服务器关服、被打到飞堡、时间结束
//复用 S2SCityDataSwitchSceneRpc

//	MSG_G2S_REQ_AREA_CITY_LEAVE											 = 2805;	//本服关服，通知跨服city 从对方服务器离开
//	MSG_S2G_RSP_AREA_CITY_LEAVE											 = 2806;	//本服关服，通知跨服city 从对方服务器离开
message MsgAreaCityLeave
{
	optional int32 area						 = 1;
}
//	MSG_G2S_REQ_CROSS_CITY_VERIFY										 = 2807;	//game 和 其他区服的场景服连接，检查跨服city是否正确，用于做宕机后，或者短暂断连后的数据处理
//	MSG_S2G_RSP_CROSS_CITY_VERIFY										 = 2808;	//game 和 其他区服的场景服连接，检查跨服city是否正确，用于做宕机后，或者短暂断连后的数据处理message NTFCrossCityVerify
message MsgCrossCityVerify
{
	optional int32 area								 = 1;
	repeated GUID city_list							 = 2;
}

//    MSG_REQ_TRANS_TO_CROSS_SCENCE_SERVER								 = 2809;	//通过game 转发到目标跨服场景服
message ReqTransToCrossScenceServer
{
	optional int32 target_area						 = 1;
	optional int32 msg_id							 = 2;
	optional bytes msg_data							 = 3;
}
//	MSG_S2C_NTF_CITY_CROSS_STATE										 = 2810;	//通知客户端跨服
message NTFCityCrossState
{
	optional int32 state							= 1;	//0 跨服开始，1 跨服结束
	optional int32 scene_city_area					= 2;	//场景city 当前area
}

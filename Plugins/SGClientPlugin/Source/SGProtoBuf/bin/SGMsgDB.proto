syntax = "proto2";

package SGMsg;

import "SGMsgBase.proto";
import "SGMsgCommon.proto";
import "proxy_model.proto";

message S2SAsyncMysqlPara
{
    required string table_name      = 1;
	repeated string field_name_list = 2;
	repeated string field_data_list = 3;
	optional int32  cb_event_module = 4;
	required int32  result          = 5;
	repeated string condition_key   = 6;
	repeated string condition_value = 7;
	optional int32  fd              = 8;
	optional int64  start           = 9;  		/* Start time of a request */   //测试待删除
	optional int64  latency         = 10;  		/* Request latency */  //测试待删除
}

message TestProto
{
	required string Name     		= 1;
	required int32  Population      = 2;
}

//--------------------------------------------
 message SubDBMsg
{
    optional int32 msg_id = 1;          // 协议ID
    optional bytes data = 2;           // 数据
}

//MSG_GS2DB_REQ_SAVE_CHAR_DATA_INCRE          = 7067; //增量保存玩家数据请求
message S2SReqSaveCharDataIncre
{
    optional GUID role_id  = 1;         // 玩家ID
    repeated SubDBMsg sub_msg = 2;      // 具体的更新协议
}

//	MSG_GS2DB_RSP_SAVE_CHAR_DATA_INCRE          = 7068; //增量保存玩家数据回复
message S2SRspSaveCharDataIncre
{
    optional GUID role_id  = 1;         // 玩家ID
}

// MSG_GS2SS_REQ_SYNC_PROPERTY
message GS2SSReqSyncProperty
{
    optional GUID city_id  = 1;         // city_ID
    repeated SubDBMsg sub_msg = 2;      // 具体的更新协议
}

// 请求角色数据 MSG_GS2DB_REQ_LOAD_CHAR_INFO = 7001
message GS2DBReqLoadCharInfo
{
	optional string account = 1;
	optional string area_line_id = 2;
    optional GUID client_id = 3;                    // 客户端ID
	optional string device_info     = 4; // 客户端登录的机器mac地址信息
	optional int32 server_id		= 5;
	optional GUID player_id		= 6;
	optional GUID config_client_id = 7; // 登陆标识
	optional GUID city_id			 = 8;
	optional string player_name 	 = 9;
	optional int32 robot			 = 10; // 是否是机器人 0:否 1:是
}

//  MSG_DB2GS_RSP_LOAD_CHAR_INFO           = 7002; //全部数据从DB发送到GS完毕
message DB2GSRspLoadCharInfo
{
	enum LCDErrorCode
	{
		LCD_SUCCESS							 = 1;
		LCD_ERROR							 = 2;
		LCD_GAME_SERVER_ID_ERROR			 = 3;
		LCD_NO_DATA							 = 4;
	}
    optional CharFullData data = 1;
    optional GUID client_id = 2;
	optional string device_info = 3; // 客户端登录的机器mac地址信息
	optional GUID config_client_id = 4; // 登陆标识
	optional GUID city_id			 = 5;
	optional int32 access_load_object	= 6; // 访问并激活对象 1:是 0:否
	optional LCDErrorCode error_code	= 7;
}

// MSG_RPC_GS2DB_REQ_LOAD_CHAR_INFO            = 57001; // rpc请求获取Player数据
message RpcGS2DBReqLoadCharInfo
{
	optional GS2DBReqLoadCharInfo load_char_data		 = 1;
	optional DB2GSRspLoadCharInfo load_player_data		 = 2;
}

//	MSG_GS2SS_REQ_LOAD_CITY_DATA				 = 2514;//
message GS2SSReqLoadCityData	
{
	optional GS2DBReqLoadCharInfo load_char_data		 = 1;
	required GUID city_id								 = 2;
	required string city_col							 = 3;
}

// MSG_RPC_GS2DB_REQ_LOAD_CITY_DATA                = 52514; // rpc 请求加载城市数据
message RpcGS2DBReqLoadCityData
{
	optional GS2DBReqLoadCharInfo load_char_data		 = 1;
	optional GUID city_id								 = 2;
	optional string city_col							 = 3;
	optional DBRspLoadCityData load_city_data			 = 4; // 返回的city数据
}

//只有错误才会回复
//	MSG_SS2GS_RSP_LOAD_CITY_DATA				 = 2515;//

//	MSG_SS2DB_REQ_LOAD_CITY_DATA					= 2517;		//GS2SSReqLoadCityData
//	MSG_DB_RSP_LOAD_CITY_DATA						= 2518;		//
//	MSG_REQ_RECOVER_GAME_CITY_DATA					= 2519;		//
message DBRspLoadCityData
{
	enum LCDErrorCode
	{
		LCD_SUCCESS							 = 1;
		LCD_ERROR							 = 2;
		LCD_GAME_SERVER_ID_ERROR			 = 3;
		LCD_NO_DATA							 = 4;
	}
	
	optional GS2DBReqLoadCharInfo load_char_data		 = 1;
	optional ScenceEntityData city_data				 = 2;
	optional LCDErrorCode error_code						 = 3;
	optional int32 access_load_object					 = 4; // 访问并激活对象 1:是 0:否
}


//消息子结构体
message CharBaseInfo							//角色的基本信息，创建角色时赋值
{
	required GUID 		u_uid 				= 1;	//GUID
    optional bytes 	    u_charName 			= 2;	//角色名字

    optional int32 		u_game_id 			= 3;	//角色区ID

	optional int64		u_last_offline_time = 4;	//角色上次下线时间
	optional int64		u_last_login_time 	= 5;	//角色上次上线时间
	optional int32 		u_total_online_time = 6;	//角色角色总在线时间
	optional int64		u_ban_time 			= 8;	//角色封禁解锁日期(格林尼治时间)
	optional int32		u_delete_flag 		= 9;	//帐号是否删除了角色

	optional int32 		u_gm_level 			= 10;	//角色GM等级，[废弃]
	optional int32 		u_login_count 		= 11;	//登录次数

	optional int64 		u_create_time		= 15;	//角色创建时间
	optional int64 		u_char_level		= 16;	//角色等级

	optional int64 		u_area_id				= 24; 	//小区
    optional int32      u_char_career           = 25; //职业
    optional int32      u_char_gender           = 26; //性别

    optional string     u_head_id               = 35;   //系统头像
}

message EntityCoreData
{
	optional ObjectRecordDB record      = 1;//表
	optional ObjectPropertyDB property  = 2;//属性
	//cache
	repeated EntityCacheSaveData cache_data					 = 4;
	optional PMsDTO pms_data							     = 5;
	optional PMUpdatesDTO pm_updates_data					 = 6;
}

//消息子结构体
message CharFullData
{
	required string account				 = 1;		//CRC64的ID
	optional CharBaseInfo base_data		 = 2;		//创建角色信息
	optional EntityCoreData storage_data = 3;		//存储要用的信息副本
	optional int32 has_data				 = 5;        //是否有数据
    optional GUID player_id				 = 6;        //玩家ID
}

// MSG_GS2DB_REQ_SAVE_CHAR_DATA_ALL            = 7065; //全量保存数据请求
message S2SReqSaveCharDataAll
{
	required CharFullData data 		= 1;		// 玩家数据
    optional bool cache = 2;                    // 是否缓存
}

// MSG_GS2DB_RSP_SAVE_CHAR_DATA_ALL            = 7066; //全量保存数据回复
message S2SRspSaveCharDataAll
{
    optional GUID role_id         = 1;        // 玩家ID
}
//---------------------------------------------------
//MSG_RPC_GS2SS_REQ_CREATECITY			= 50013;// 请求创建城市	
message GS2SSReqCreateCity
{
	enum ECityCreateType
	{
		CCT_INIT_CREATE			 = 1; //初始化创建
		CCT_RELOAD_CREATE		 = 2;	//开服加载数据
		CCT_RECOVER_CREATE		 = 3;	//恢复数据
		CCT_SWITCH_SCENE_SERVER	 = 4;	//场景服切换
		CCT_MIGRATE				 = 5;	//移民	
		CCT_SCENCE_SERVER_RECOVER				 = 6;	//场景服宕机恢复		
	}
	
	optional ScenceEntityData create_info 		= 1; //请求的信息
	optional int32 nResult 							= 2; //处理结果
	optional GUID player							= 3;
	optional int32 game_server_id					= 4;
	optional Point2D cur_pos						= 5;
	optional int64 scene_id                         = 6; //场景ID
	optional int32 enter_main_scence                = 7; //场景类型
	optional ECityCreateType create_type			= 8;
	optional GS2DBReqLoadCharInfo load_char_info	= 9;
	optional int32 scene_group						= 10;
	optional int32 area_id							= 11;
	optional bool cross_state						= 12;
	//optional ScenceEntityData alliance_data			= 13;	//跨服联盟数据比较简单，暂时拆开发了，如果需要复杂数据可以用这个打包
	optional bytes alliance_property				= 14;
	optional string alliance_name					= 15;
	optional string alliance_tag					= 16;
	optional bytes alliance_symbol					= 17;
	optional int64 finish_cross_time				= 18;
}
//--------------------------------------------

message S2DReqLoadScenceEntity
{
	required string collection_id					 = 1;
	required int64 start_index						 = 2;
	required int32 load_count						 = 3;
	required int32 class_type						 = 4;
}

message ScenceCityExCreateData
{
	optional S2SReqInitPropertys propertys			 = 1;	//city general property
	optional int32 tower_level							 = 2;	//
	//repeated GUID soldiers								 = 3;	//士兵id 和数量
	repeated GlobalBuffInfo buffList 					 = 4;	// buff信息
}

message ScenceEntityData
{
	required GUID obj_id	 	        = 1;//guid
	optional int32 class_type			= 2;
	optional int64 config_id			= 3;
	optional EntityCoreData core_data	= 4;
	optional ScenceCityExCreateData ex_data			 = 5;
}

message D2SRspLoadScenceEntity
{
	repeated ScenceEntityData entity_list				 = 1;
	optional bool is_finish								 = 2;	//
	optional int64 data_time							 = 3;	//打包消息的时间
}

message EntityCacheSaveData
{
	optional int32 cache_type								 = 1;
	optional bytes cache_data								 = 2;
	optional string cache_name                               = 3;
}
//	MSG_S2D_REQ_SAVE_SCENCE_ENTITY					= 2507;
message S2DReqSaveScenceEntity
{
	required string collection_id							 = 1;
	required ScenceEntityData entity_data					 = 2;
	optional bool cache										 = 3;
	optional bool offline									 = 4;
}
//	MSG_S2D_REQ_DELETE_SCENCE_ENTITY				= 2509;
message S2DReqDeleteScenceEntity
{
	required GUID obj_id	 	        = 1;//guid
	required string collection          = 2;//集合名
}
//-----------数据加载-----------------------------
//	MSG_REQ_DB_DATA_CACHE_STATE					= 1103;  //空消息
//	MSG_NTF_DB_DATA_CACHE_CLEAR					= 1104;	 //空消息
//	MSG_G2S_NTF_DELETE_SCENCE_CITY
message NtfDeleteScenceCity
{
	optional int32 type						 = 1;	//1 删除db数据
}
